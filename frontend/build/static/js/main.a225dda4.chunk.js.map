{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstant.js","constants/supplierConstant.js","store.js","reducers/productSeedReducer.js","reducers/productLendMachineReducer.js","reducers/consumerProductsReducer.js","reducers/orderReducers.js","reducers/supplierReducers.js","reducers/cartReducers.js","reducers/userReducer.js","components/Footer/Footer.jsx","actions/userActions.js","components/Header/Header.jsx","components/Message/Message.jsx","components/Loader/Loader.jsx","components/FormContainer/FormContainer.jsx","components/Helmet/Meta.jsx","components/Login/LoginComponent.jsx","components/Register/Register.jsx","components/CheckoutSteps/CheckoutSteps.jsx","actions/orderAction.js","components/PlaceOrder/PlaceOrder.jsx","components/CardMenuSet/CardMenu.jsx","components/OurServices/OurServices.jsx","components/Slider/sliderData.js","components/Slider/Slider.jsx","actions/supplierProduct.js","screens/Map/MapStyles.js","screens/Map/Rating/Rating.jsx","screens/Map/Map.jsx","screens/Map/GenralMap.jsx","screens/Home/HomeScreen.jsx","components/ConsumerProducts/ConsumerProducts.jsx","actions/consumerProductAction.js","screens/Consumer/ConsumerScreen.jsx","screens/Farmer/FarmerScreen.jsx","components/SupplierProduct/AddSupplierProduct.jsx","screens/Supplier/SupplierScreen.jsx","screens/Profile/ProfileScreen.jsx","components/SideBar/SideBarComponents.jsx","components/DashBoard/Statistics/StatCards/StatCards.jsx","components/DashBoard/Statistics/BarChart/Bar.jsx","components/DashBoard/Statistics/Doughnut/Doughnut.jsx","components/DashBoard/Statistics/LineChart/LineChart.jsx","components/DashBoard/Statistics/StatisticsList.jsx","screens/Dashboard/DashboardScreen.jsx","components/DashBoard/Profile/EditProfile.jsx","screens/Dashboard/ProfileScreen.jsx","components/Rating/Rating.jsx","components/PurchaseSeeds/PurchaseSeeds.jsx","actions/productSeedActions.js","screens/Farmer_ProductSeed/Farmer_ProductSeedScreen.jsx","screens/Product_Seed/SeedProductScreen.jsx","components/LendMachines/LendMachines.jsx","actions/productLendMachinesActions.js","screens/Farmer_LendMachine/Farmer_LendScreen.jsx","screens/Product_LendMachine/LendMachineProduct.jsx","actions/cartActions.js","screens/Payment/PaymentMethodScreen.jsx","screens/Product_Consumer/ConsumerProductDetailScreen.jsx","screens/Shipping/ShippingScreen.jsx","screens/Order/OrderScreen.jsx","screens/Cart/Cart.jsx","components/DashBoard/UserList/UserList.jsx","screens/Dashboard/UserListScreen.jsx","screens/UserEdit/UserEditScreen.jsx","components/DashBoard/ProductList/SeedList/SeedList.jsx","components/DashBoard/ProductList/LendMachineList/LendMachineList.jsx","components/DashBoard/ProductList/ConsumerList/ConsumerList.jsx","components/DashBoard/ProductList/ProductListHome.jsx","screens/Dashboard/ProductListScreen.jsx","screens/ProductListEdit/SeedListEdit/SeedListEdit.jsx","screens/ProductListEdit/MachineListEdit/MachineListEdit.jsx","screens/ProductListEdit/ConsumerListEdit/ConsumerListEdit.jsx","components/SupplierProductEdit/SupplierProductEdit.jsx","components/DashBoard/OrderList/OrderList.jsx","screens/Dashboard/OrderListScreen.jsx","components/DashBoard/Harvest/Harvest.jsx","screens/Dashboard/HarvestScreen.jsx","screens/FarmerProducts/FarmerProducts.jsx","components/DashBoard/Map/MapStyles.js","components/DashBoard/Map/Rating/Rating.jsx","components/DashBoard/Map/Map.jsx","components/DashBoard/Map/OverLay.jsx","screens/Dashboard/MapScreen.jsx","Layout.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_SEED_LIST_REQUEST","PRODUCT_SEED_LIST_SUCCESS","PRODUCT_SEED_LIST_FAIL","PRODUCT_SEED_DETAILS_REQUEST","PRODUCT_SEED_DETAILS_SUCCESS","PRODUCT_SEED_DETAILS_FAIL","SEED_DELETE_REQUEST","SEED_DELETE_SUCCESS","SEED_DELETE_FAIL","SEED_CREATE_REQUEST","SEED_CREATE_SUCCESS","SEED_CREATE_FAIL","SEED_CREATE_RESET","SEED_UPDATE_REQUEST","SEED_UPDATE_SUCCESS","SEED_UPDATE_FAIL","SEED_UPDATE_RESET","PRODUCT_MACHINE_LIST_REQUEST","PRODUCT_MACHINE_LIST_SUCCESS","PRODUCT_MACHINE_LIST_FAIL","PRODUCT_MACHINE_DETAILS_REQUEST","PRODUCT_MACHINE_DETAILS_SUCCESS","PRODUCT_MACHINE_DETAILS_FAIL","MACHINE_DELETE_REQUEST","MACHINE_DELETE_SUCCESS","MACHINE_DELETE_FAIL","MACHINE_CREATE_REQUEST","MACHINE_CREATE_SUCCESS","MACHINE_CREATE_FAIL","MACHINE_CREATE_RESET","MACHINE_UPDATE_REQUEST","MACHINE_UPDATE_SUCCESS","MACHINE_UPDATE_FAIL","MACHINE_UPDATE_RESET","CONSUMER_PRODUCT_LIST_REQUEST","CONSUMER_PRODUCT_LIST_SUCCESS","CONSUMER_PRODUCT_LIST_FAIL","CONSUMER_PRODUCT_DETAILS_REQUEST","CONSUMER_PRODUCT_DETAILS_SUCCESS","CONSUMER_PRODUCT_DETAILS_FAIL","CONSUMER_DELETE_REQUEST","CONSUMER_DELETE_SUCCESS","CONSUMER_DELETE_FAIL","CONSUMER_CREATE_REQUEST","CONSUMER_CREATE_SUCCESS","CONSUMER_CREATE_FAIL","CONSUMER_CREATE_RESET","CONSUMER_UPDATE_REQUEST","CONSUMER_UPDATE_SUCCESS","CONSUMER_UPDATE_FAIL","CONSUMER_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESSS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SAVE","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SAVE","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SAVE","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SAVE","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SAVE","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SAVE","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","SUPPLIER_PRODUCT_CREATE_REQUEST","SUPPLIER_PRODUCT_CREATE_SUCCESS","SUPPLIER_PRODUCT_CREATE_FAIL","SUPPLIER_PRODUCT_LIST_REQUEST","SUPPLIER_PRODUCT_LIST_SUCCESS","SUPPLIER_PRODUCT_LIST_FAIL","SUPPLIER_PRODUCT_LIST_MY_REQUEST","SUPPLIER_PRODUCT_LIST_MY_SUCCESS","SUPPLIER_PRODUCT_LIST_MY_FAIL","SUPPLIER_PRODUCT_REQUEST","SUPPLIER_PRODUCT_SUCCESS","SUPPLIER_PRODUCT_FAIL","FARMER_PRODUCT_CREATE_REVIEW_REQUEST","FARMER_PRODUCT_CREATE_REVIEW_SUCCESS","FARMER_PRODUCT_CREATE_REVIEW_FAIL","FARMER_PRODUCT_CREATE_REVIEW_RESET","SUPPLIER_PRODUCT_UPDATE_REQUEST","SUPPLIER_PRODUCT_UPDATE_SUCCESS","SUPPLIER_PRODUCT_UPDATE_FAIL","SUPPLIER_PRODUCT_UPDATE_RESET","SUPPLIER_PRODUCT_FOR_ALL_REQUEST","SUPPLIER_PRODUCT_FOR_ALL_SUCCESS","SUPPLIER_PRODUCT_FOR_ALL_FAIL","reducer","combineReducers","prodcutSeedList","state","productSeeds","action","type","loading","payload","error","prodcutSeedDetails","productSeed","reviews","prodcutSeedDelete","success","seedCreate","product","seedUpdate","seed","productReviewCreate","productLendMachinesList","productLendMachines","productLendMachinesDetails","productLendMachinesDelete","LendMachinesCreate","LendMachinesUpdate","machine","consumerProductList","consumerProducts","consumerProductDetails","consumerProduct","consumerProductDelete","consumerCreate","consumerUpdate","consumer","orderDeliver","productCreate","supplierProdictListMy","products","supplierProductList","FarmerProductDetails","farmerReviewCreate","farmerProductUpdate","productReviewed","supplierProductForAllList","cartSeed","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","orderCreate","order","orderDetails","orderItems","shippingAddres","orderPay","orderListMy","orders","orderList","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","color","className","style","backgroundColor","md","lg","to","xl","width","Form","Group","controlId","Label","Control","placeholder","as","rows","Button","variant","fluid","Date","getFullYear","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","updateUserProfile","put","listUsers","logout","removeItem","Header","useDispatch","useSelector","Navbar","collapseOnSelect","expand","fixed","Brand","Image","src","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","name","toUpperCase","isAdmin","Item","onClick","Message","children","Alert","defaultProps","override","css","Loader","useState","size","FormContainer","Container","Row","Col","xs","Meta","description","keywords","Helmet","content","LoginComponent","location","history","email","setEmail","password","setPassword","redirect","search","split","useEffect","push","marginTop","onSubmit","e","preventDefault","post","setItem","stringify","login","value","required","onChange","target","marginBottom","Register","setName","cropSelection","confirmPassword","setConfirmPassword","setMessage","register","CheckoutSteps","step1","step2","step3","step4","disabled","listMyOrders","listOrders","PlaceOrder","num","cart","itemsPrice","reduce","acc","qty","price","toFixed","shippingPrice","taxPrice","Number","Math","round","totalPrice","_id","ListGroup","address","city","postalCode","country","length","index","image","alt","rounded","Card","createOrder","CardMenu","CardDeck","border","Body","Title","Text","OurServices","slider","tag","SliderComponent","setSlider","background","toLowerCase","listSupplierProducts","getroductsDetails","MapStyles","Rating","text","WrappedMap","withScriptjs","withGoogleMap","selectedPlace","setSelectedPlace","loadingProducts","errorProducts","defaultCenter","lat","lng","defaultZoom","defaultOptions","styles","place","position","latitude","longitude","icon","url","scaledSize","window","google","maps","Size","onCloseClick","textAlign","isReviwed","rating","GenralMap","height","googleMapURL","process","loadingElement","containerElement","mapElement","HomeScreen","Slider","ConsumerProducts","prod_name","avalaible_location","prod_size","sm","Img","fontWeight","varient","listConsumerProducts","listConsumerProductsDetails","ConsumerScreen","numberOfItems","setNumberOfItems","slice","seller_name","quantity","FarmerScreen","AddSupplierProduct","setImage","setAddress","setCropSelection","setDescription","phonenumber","setPhonenumber","storage","setStorage","uploading","setUploading","useHistory","uploadFileHandler","file","files","formData","FormData","append","console","createSupplierProduct","File","label","custom","SupplierScreen","ProfileScreen","show","setShow","setTarget","ref","useRef","loadingOrders","errorOrders","handleClick","event","Table","striped","bordered","hover","responsive","createdAt","substring","isPaid","paidAt","isDelivered","deliveredAt","fontSize","Overlay","placement","container","current","containerPadding","Popover","review","Content","comment","SideBarComponents","StatCards","userCount","setUserCount","orderCount","setOrderCount","userLen","orderLen","BarChart","labels","datasets","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","maintainAspectRatio","DoughnutComponent","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","LineChart","StatisticsList","Bar","Doughnut","DashboardScreen","marginLeft","EditProfile","PurchaseSeeds","listSeedProducts","listSeedProductsDetails","Farmer_ProductSeedScreen","numReviews","SeedProductScreen","match","setQty","setRating","setComment","successProductReview","loadingProductReview","errorProductReview","params","countInStock","Array","keys","productId","row","LendMachines","targetPlant","listLendMachineProducts","listLendMachineProductsDetails","Farmer_LendScreen","target_plant","LendMachineProduct","machine_power","addToCart","PaymentScreen","setPaymentMethod","Check","checked","ConsumerProductDetailScreen","ShippingScreen","setCity","setPostalCode","setCountry","OrderScreen","orderId","sdkReady","setSdkReady","successPay","loadingPay","successDeliver","loadingDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","Cart","removeFromCartHandler","removeFromCart","UserList","successDelete","deleteHandler","confirm","delete","deleteUsers","float","UserListScreen","UserEditScreen","userId","setIsAdmin","loadingUpdate","successUpdate","errorUpdate","updateUser","SeedList","loadingSeed","errorSeed","successSeedDelete","loadingDelete","errorDelete","successSeedCreate","loadingCreate","errorCreate","deleteSeedProducts","category","loadingMachine","errorMachine","successCreate","deleteLendMachineProduct","ConsumerList","loadingConsumer","errorConsumer","deleteLoadingConsumer","errorDeleteConsumer","createLoadingConsumer","errorcreateConsumer","deleteConsumerProduct","ProductListHome","LendMachineList","ProductListScreen","SeedListEdit","setPrice","setCategory","setCountInStock","setTarget_plant","setQuantity","setMachine_power","ConsumerListEdit","prodName","setProdName","sellerName","setSellerName","prodSize","setProdSize","avalaibleLoc","setAvalaibleLoc","SupplierProductEdit","updateSupplierProduct","OrderListScreen","varinat","OrderList","Harvest","rel","HarvestScreen","FarmerProduct","loadingReview","loadingError","successReview","OverLay","MapScreen","Layout","exact","path","component","Farmer","Consumer","Supplier","PaymentMethodScreen","AdminProfileScreen","MachineListEdit","Farmer_ProductSeed","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dotenv","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a225dda4.chunk.js","sourcesContent":["// SEEDS\nexport const PRODUCT_SEED_LIST_REQUEST = 'PRODUCT_SEED_LIST_REQUEST'\nexport const PRODUCT_SEED_LIST_SUCCESS = 'PRODUCT_SEED_LIST_SUCCESS'\nexport const PRODUCT_SEED_LIST_FAIL = 'PRODUCT_SEED_LIST_FAIL'\n\nexport const PRODUCT_SEED_DETAILS_REQUEST = 'PRODUCT_SEED_DETAILS_REQUEST'\nexport const PRODUCT_SEED_DETAILS_SUCCESS = 'PRODUCT_SEED_DETAILS_SUCCESS'\nexport const PRODUCT_SEED_DETAILS_FAIL = 'PRODUCT_SEED_DETAILS_FAIL'\n\nexport const SEED_DELETE_REQUEST = 'SEED_DELETE_REQUEST'\nexport const SEED_DELETE_SUCCESS = 'SEED_DELETE_SUCCESS'\nexport const SEED_DELETE_FAIL = 'SEED_DELETE_FAIL'\n\nexport const SEED_CREATE_REQUEST = 'SEED_CREATE_REQUEST'\nexport const SEED_CREATE_SUCCESS = 'SEED_CREATE_SUCCESS'\nexport const SEED_CREATE_FAIL = 'SEED_CREATE_FAIL'\nexport const SEED_CREATE_RESET = 'SEED_CREATE_RESET'\n\nexport const SEED_UPDATE_REQUEST = 'SEED_UPDATE_REQUEST'\nexport const SEED_UPDATE_SUCCESS = 'SEED_UPDATE_SUCCESS'\nexport const SEED_UPDATE_FAIL = 'SEED_UPDATE_FAIL'\nexport const SEED_UPDATE_RESET = 'SEED_UPDATE_RESET'\n\n\n// LEND MACHINES\nexport const PRODUCT_MACHINE_LIST_REQUEST = 'PRODUCT_MACHINE_LIST_REQUEST'\nexport const PRODUCT_MACHINE_LIST_SUCCESS = 'PRODUCT_MACHINE_LIST_SUCCESS'\nexport const PRODUCT_MACHINE_LIST_FAIL = 'PRODUCT_MACHINE_LIST_FAIL'\n\nexport const PRODUCT_MACHINE_DETAILS_REQUEST = 'PRODUCT_MACHINE_DETAILS_REQUEST'\nexport const PRODUCT_MACHINE_DETAILS_SUCCESS = 'PRODUCT_MACHINE_DETAILS_SUCCESS'\nexport const PRODUCT_MACHINE_DETAILS_FAIL = 'PRODUCT_MACHINE_DETAILS_FAIL'\n\nexport const MACHINE_DELETE_REQUEST = 'MACHINE_DELETE_REQUEST'\nexport const MACHINE_DELETE_SUCCESS = 'MACHINE_DELETE_SUCCESS'\nexport const MACHINE_DELETE_FAIL = 'MACHINE_DELETE_FAIL'\n\nexport const MACHINE_CREATE_REQUEST = 'MACHINE_CREATE_REQUEST'\nexport const MACHINE_CREATE_SUCCESS = 'MACHINE_CREATE_SUCCESS'\nexport const MACHINE_CREATE_FAIL = 'MACHINE_CREATE_FAIL'\nexport const MACHINE_CREATE_RESET = 'MACHINE_CREATE_RESET'\n\nexport const MACHINE_UPDATE_REQUEST = 'MACHINE_UPDATE_REQUEST'\nexport const MACHINE_UPDATE_SUCCESS = 'MACHINE_UPDATE_SUCCESS'\nexport const MACHINE_UPDATE_FAIL = 'MACHINE_UPDATE_FAIL'\nexport const MACHINE_UPDATE_RESET = 'MACHINE_UPDATE_RESET'\n\n// CONSUMER\nexport const CONSUMER_PRODUCT_LIST_REQUEST = 'CONSUMER_PRODUCT_LIST_REQUEST'\nexport const CONSUMER_PRODUCT_LIST_SUCCESS = 'CONSUMER_PRODUCT_LIST_SUCCESS'\nexport const CONSUMER_PRODUCT_LIST_FAIL = 'CONSUMER_PRODUCT_LIST_FAIL'\n\nexport const CONSUMER_PRODUCT_DETAILS_REQUEST = 'CONSUMER_PRODUCT_DETAILS_REQUEST'\nexport const CONSUMER_PRODUCT_DETAILS_SUCCESS = 'CONSUMER_PRODUCT_DETAILS_SUCCESS'\nexport const CONSUMER_PRODUCT_DETAILS_FAIL = 'CONSUMER_PRODUCT_DETAILS_FAIL'\n\nexport const CONSUMER_DELETE_REQUEST = 'CONSUMER_DELETE_REQUEST'\nexport const CONSUMER_DELETE_SUCCESS = 'CONSUMER_DELETE_SUCCESS'\nexport const CONSUMER_DELETE_FAIL = 'CONSUMER_DELETE_FAIL'\n\nexport const CONSUMER_CREATE_REQUEST = 'CONSUMER_CREATE_REQUEST'\nexport const CONSUMER_CREATE_SUCCESS = 'CONSUMER_CREATE_SUCCESS'\nexport const CONSUMER_CREATE_FAIL = 'CONSUMER_CREATE_FAIL'\nexport const CONSUMER_CREATE_RESET = 'CONSUMER_CREATE_RESET'\n\nexport const CONSUMER_UPDATE_REQUEST = 'CONSUMER_UPDATE_REQUEST'\nexport const CONSUMER_UPDATE_SUCCESS = 'CONSUMER_UPDATE_SUCCESS'\nexport const CONSUMER_UPDATE_FAIL = 'CONSUMER_UPDATE_FAIL'\nexport const CONSUMER_UPDATE_RESET = 'CONSUMER_UPDATE_RESET'\n\n// Reviews\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESSS = 'CART_SAVE_SHIPPING_ADDRESSS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SAVE = 'ORDER_CREATE_SAVE'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SAVE = 'ORDER_DETAILS_SAVE'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SAVE = 'ORDER_PAY_SAVE'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SAVE = 'ORDER_LIST_MY_SAVE'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SAVE = 'ORDER_LIST_SAVE'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SAVE = 'ORDER_DELIVER_SAVE'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","export const SUPPLIER_PRODUCT_CREATE_REQUEST = 'SUPPLIER_PRODUCT_CREATE_REQUEST'\nexport const SUPPLIER_PRODUCT_CREATE_SUCCESS = 'SUPPLIER_PRODUCT_CREATE_SUCCESS'\nexport const SUPPLIER_PRODUCT_CREATE_FAIL = 'SUPPLIER_PRODUCT_CREATE_FAIL'\n\nexport const SUPPLIER_PRODUCT_LIST_REQUEST = 'SUPPLIER_PRODUCT_LIST_REQUEST'\nexport const SUPPLIER_PRODUCT_LIST_SUCCESS = 'SUPPLIER_PRODUCT_LIST_SUCCESS'\nexport const SUPPLIER_PRODUCT_LIST_FAIL = 'SUPPLIER_PRODUCT_LIST_FAIL'\n\nexport const SUPPLIER_PRODUCT_LIST_MY_REQUEST = 'SUPPLIER_PRODUCT_LIST_MY_REQUEST'\nexport const SUPPLIER_PRODUCT_LIST_MY_SUCCESS = 'SUPPLIER_PRODUCT_LIST_MY_SUCCESS'\nexport const SUPPLIER_PRODUCT_LIST_MY_FAIL = 'SUPPLIER_PRODUCT_LIST_MY_FAIL'\n\nexport const SUPPLIER_PRODUCT_REQUEST = 'SUPPLIER_PRODUCT_REQUEST'\nexport const SUPPLIER_PRODUCT_SUCCESS = 'SUPPLIER_PRODUCT_SUCCESS'\nexport const SUPPLIER_PRODUCT_FAIL = 'SUPPLIER_PRODUCT_FAIL'\n\n// Reviews\nexport const FARMER_PRODUCT_CREATE_REVIEW_REQUEST = 'FARMER_PRODUCT_CREATE_REVIEW_REQUEST'\nexport const FARMER_PRODUCT_CREATE_REVIEW_SUCCESS = 'FARMER_PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const FARMER_PRODUCT_CREATE_REVIEW_FAIL = 'FARMER_PRODUCT_CREATE_REVIEW_FAIL'\nexport const FARMER_PRODUCT_CREATE_REVIEW_RESET = 'FARMER_PRODUCT_CREATE_REVIEW_RESET'\n\nexport const SUPPLIER_PRODUCT_UPDATE_REQUEST = 'SUPPLIER_PRODUCT_UPDATE_REQUEST'\nexport const SUPPLIER_PRODUCT_UPDATE_SUCCESS = 'SUPPLIER_PRODUCT_UPDATE_SUCCESS'\nexport const SUPPLIER_PRODUCT_UPDATE_FAIL = 'SUPPLIER_PRODUCT_UPDATE_FAIL'\nexport const SUPPLIER_PRODUCT_UPDATE_RESET = 'SUPPLIER_PRODUCT_UPDATE_RESET'\n\n// For all\n\nexport const SUPPLIER_PRODUCT_FOR_ALL_REQUEST = 'SUPPLIER_PRODUCT_FOR_ALL_REQUEST'\nexport const SUPPLIER_PRODUCT_FOR_ALL_SUCCESS = 'SUPPLIER_PRODUCT_FOR_ALL_SUCCESS'\nexport const SUPPLIER_PRODUCT_FOR_ALL_FAIL = 'SUPPLIER_PRODUCT_FOR_ALL_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport {\n    prodcutSeedListReducer,\n    prodcutSeedDetailsReducer,\n    prodcutSeedDeleteReducer,\n    seedCreateReducer,\n    seedUpdateReducer,\n    productReviewCreateReducer\n} from './reducers/productSeedReducer'\nimport {\n    productLendMachinesListReducer,\n    productLendMachinesDetailsReducer,\n    productLendMachinesDeleteReducer,\n    LendMachinesCreateReducer,\n    LendMachinesUpdateReducer\n} from './reducers/productLendMachineReducer'\nimport { cartSeedReducer } from './reducers/cartReducers'\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListeReducer,\n    userDeleteReducer,\n    userUpdateReducer\n} from './reducers/userReducer.js'\nimport {\n    consumerProductListReducer,\n    consumerProductDetailsReducer,\n    consumerProductDeleteReducer,\n    consumerCreateReducer,\n    consumerUpdateReducer\n} from './reducers/consumerProductsReducer'\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer,\n    orderListReducer,\n    orderDeliverReducer\n} from './reducers/orderReducers'\n\nimport {\n    productCreateReducer,\n    supplierProdictListMyReducer,\n    supplierProductListReducer,\n    FarmerProductDetailsReducer,\n    farmerReviewCreateReducer,\n    farmerProductUpdateReducer,\n    supplierProductForAllListReducer\n} from './reducers/supplierReducers'\n\nconst reducer = combineReducers({\n    prodcutSeedList: prodcutSeedListReducer,\n    prodcutSeedDetails: prodcutSeedDetailsReducer,\n    prodcutSeedDelete: prodcutSeedDeleteReducer,\n    seedCreate: seedCreateReducer,\n    seedUpdate: seedUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n\n    productLendMachinesList: productLendMachinesListReducer,\n    productLendMachinesDetails: productLendMachinesDetailsReducer,\n    productLendMachinesDelete: productLendMachinesDeleteReducer,\n    LendMachinesCreate: LendMachinesCreateReducer,\n    LendMachinesUpdate: LendMachinesUpdateReducer,\n\n    consumerProductList: consumerProductListReducer,\n    consumerProductDetails: consumerProductDetailsReducer,\n    consumerProductDelete: consumerProductDeleteReducer,\n    consumerCreate: consumerCreateReducer,\n    consumerUpdate: consumerUpdateReducer,\n    orderDeliver: orderDeliverReducer,\n\n    productCreate: productCreateReducer,\n    supplierProdictListMy: supplierProdictListMyReducer,\n    supplierProductList: supplierProductListReducer,\n    FarmerProductDetails: FarmerProductDetailsReducer,\n    farmerReviewCreate: farmerReviewCreateReducer,\n    farmerProductUpdate: farmerProductUpdateReducer,\n    supplierProductForAllList: supplierProductForAllListReducer,\n\n    cartSeed: cartSeedReducer,\n\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListeReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n    ? JSON.parse(localStorage.getItem('userInfo'))\n    : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\n    : {}\n\nconst initialState = {\n    cartSeed: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage\n    },\n    userLogin: {\n        userInfo: userInfoFromStorage\n    }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","import {\n    PRODUCT_SEED_LIST_REQUEST,\n    PRODUCT_SEED_LIST_SUCCESS,\n    PRODUCT_SEED_LIST_FAIL,\n    PRODUCT_SEED_DETAILS_REQUEST,\n    PRODUCT_SEED_DETAILS_SUCCESS,\n    PRODUCT_SEED_DETAILS_FAIL,\n    SEED_DELETE_REQUEST,\n    SEED_DELETE_SUCCESS,\n    SEED_DELETE_FAIL,\n    SEED_CREATE_REQUEST,\n    SEED_CREATE_SUCCESS,\n    SEED_CREATE_FAIL,\n    SEED_CREATE_RESET,\n    SEED_UPDATE_REQUEST,\n    SEED_UPDATE_SUCCESS,\n    SEED_UPDATE_FAIL,\n    SEED_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET\n} from './../constants/productConstants.js'\n\nexport const prodcutSeedListReducer = (state = { productSeeds: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_SEED_LIST_REQUEST:\n            return { loading: true, productSeeds: [] }\n        case PRODUCT_SEED_LIST_SUCCESS:\n            return { loading: false, productSeeds: action.payload }\n        case PRODUCT_SEED_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const prodcutSeedDetailsReducer = (state = { productSeed: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_SEED_DETAILS_REQUEST:\n            return { loading: true, ...state }\n        case PRODUCT_SEED_DETAILS_SUCCESS:\n            return { loading: false, productSeed: action.payload }\n        case PRODUCT_SEED_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const prodcutSeedDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case SEED_DELETE_REQUEST:\n            return { loading: true }\n        case SEED_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case SEED_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const seedCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case SEED_CREATE_REQUEST:\n            return { loading: true }\n        case SEED_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case SEED_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        case SEED_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const seedUpdateReducer = (state = { seed: {} }, action) => {\n    switch (action.type) {\n        case SEED_UPDATE_REQUEST:\n            return { loading: true }\n        case SEED_UPDATE_SUCCESS:\n            return { loading: false, success: true, seed: action.payload }\n        case SEED_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case SEED_UPDATE_RESET:\n            return {\n                seed: {}\n            }\n        default:\n            return state\n    }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true }\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n        default:\n            return state\n    }\n}","import { \n    PRODUCT_MACHINE_LIST_REQUEST, \n    PRODUCT_MACHINE_LIST_SUCCESS, \n    PRODUCT_MACHINE_LIST_FAIL,\n    PRODUCT_MACHINE_DETAILS_REQUEST, \n    PRODUCT_MACHINE_DETAILS_SUCCESS, \n    PRODUCT_MACHINE_DETAILS_FAIL,\n    MACHINE_DELETE_REQUEST,\n    MACHINE_DELETE_SUCCESS,\n    MACHINE_DELETE_FAIL,\n    MACHINE_CREATE_REQUEST,\n    MACHINE_CREATE_SUCCESS,\n    MACHINE_CREATE_FAIL,\n    MACHINE_CREATE_RESET,\n    MACHINE_UPDATE_SUCCESS,\n    MACHINE_UPDATE_FAIL,\n    MACHINE_UPDATE_RESET,\n    MACHINE_UPDATE_REQUEST\n} from './../constants/productConstants.js'\n\nexport const productLendMachinesListReducer = (state = { productLendMachines: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_MACHINE_LIST_REQUEST:\n            return { loading: true, productLendMachines: [] }\n        case PRODUCT_MACHINE_LIST_SUCCESS:\n            return { loading: false, productLendMachines: action.payload }\n        case PRODUCT_MACHINE_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productLendMachinesDetailsReducer = (state = { productLendMachines: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_MACHINE_DETAILS_REQUEST:\n            return { loading: true, ...state }\n        case PRODUCT_MACHINE_DETAILS_SUCCESS:\n            return { loading: false, productLendMachines: action.payload }\n        case PRODUCT_MACHINE_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productLendMachinesDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case MACHINE_DELETE_REQUEST:\n            return { loading: true }\n        case MACHINE_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case MACHINE_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const LendMachinesCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case MACHINE_CREATE_REQUEST:\n            return { loading: true }\n        case MACHINE_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case MACHINE_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        case MACHINE_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const LendMachinesUpdateReducer = (state = { machine: {} }, action) => {\n    switch (action.type) {\n        case MACHINE_UPDATE_REQUEST:\n            return { loading: true }\n        case MACHINE_UPDATE_SUCCESS:\n            return { loading: false, success: true, machine: action.payload }\n        case MACHINE_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case MACHINE_UPDATE_RESET:\n            return {\n                machine: {}\n            }\n        default:\n            return state\n    }\n}","import {\n    CONSUMER_PRODUCT_LIST_REQUEST,\n    CONSUMER_PRODUCT_LIST_SUCCESS,\n    CONSUMER_PRODUCT_LIST_FAIL,\n    CONSUMER_PRODUCT_DETAILS_REQUEST,\n    CONSUMER_PRODUCT_DETAILS_SUCCESS,\n    CONSUMER_PRODUCT_DETAILS_FAIL,\n    CONSUMER_DELETE_REQUEST,\n    CONSUMER_DELETE_SUCCESS,\n    CONSUMER_DELETE_FAIL,\n    CONSUMER_CREATE_REQUEST,\n    CONSUMER_CREATE_SUCCESS,\n    CONSUMER_CREATE_FAIL,\n    CONSUMER_CREATE_RESET,\n    CONSUMER_UPDATE_REQUEST,\n    CONSUMER_UPDATE_SUCCESS,\n    CONSUMER_UPDATE_FAIL,\n    CONSUMER_UPDATE_RESET\n} from '../constants/productConstants'\n\nexport const consumerProductListReducer = (state = { consumerProducts: [] }, action) => {\n    switch (action.type) {\n        case CONSUMER_PRODUCT_LIST_REQUEST:\n            return { loading: true, consumerProducts: [] }\n        case CONSUMER_PRODUCT_LIST_SUCCESS:\n            return { loading: false, consumerProducts: action.payload }\n        case CONSUMER_PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const consumerProductDetailsReducer = (state = { consumerProduct: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case CONSUMER_PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n        case CONSUMER_PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, consumerProduct: action.payload }\n        case CONSUMER_PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const consumerProductDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSUMER_DELETE_REQUEST:\n            return { loading: true }\n        case CONSUMER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case CONSUMER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const consumerCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONSUMER_CREATE_REQUEST:\n            return { loading: true }\n        case CONSUMER_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case CONSUMER_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        case CONSUMER_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const consumerUpdateReducer = (state = { consumer: {} }, action) => {\n    switch (action.type) {\n        case CONSUMER_UPDATE_REQUEST:\n            return { loading: true }\n        case CONSUMER_UPDATE_SUCCESS:\n            return { loading: false, success: true, consumer: action.payload }\n        case CONSUMER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case CONSUMER_UPDATE_RESET:\n            return {\n                consumer: {}\n            }\n        default:\n            return state\n    }\n}","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SAVE,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SAVE,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SAVE,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SAVE,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SAVE,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SAVE,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET\n} from '../constants/orderConstant'\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_CREATE_SAVE:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddres: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case ORDER_DETAILS_SAVE:\n            return {\n                loading: false,\n                order: action.payload\n            }\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SAVE:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_PAY_SAVE:\n            return {\n                loading: false,\n                success: true\n            }\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_PAY_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_LIST_MY_SAVE:\n            return {\n                loading: false,\n                orders: action.payload,\n            }\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_LIST_MY_RESET:\n            return { orders: [] }\n        default:\n            return state\n    }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_LIST_SAVE:\n            return {\n                loading: false,\n                orders: action.payload,\n            }\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}","import {\n    SUPPLIER_PRODUCT_CREATE_FAIL,\n    SUPPLIER_PRODUCT_CREATE_REQUEST,\n    SUPPLIER_PRODUCT_CREATE_SUCCESS,\n    SUPPLIER_PRODUCT_LIST_REQUEST,\n    SUPPLIER_PRODUCT_LIST_SUCCESS,\n    SUPPLIER_PRODUCT_LIST_FAIL,\n    SUPPLIER_PRODUCT_LIST_MY_REQUEST,\n    SUPPLIER_PRODUCT_LIST_MY_SUCCESS,\n    SUPPLIER_PRODUCT_LIST_MY_FAIL,\n    SUPPLIER_PRODUCT_REQUEST,\n    SUPPLIER_PRODUCT_SUCCESS,\n    SUPPLIER_PRODUCT_FAIL,\n    FARMER_PRODUCT_CREATE_REVIEW_REQUEST,\n    FARMER_PRODUCT_CREATE_REVIEW_SUCCESS,\n    FARMER_PRODUCT_CREATE_REVIEW_FAIL,\n    FARMER_PRODUCT_CREATE_REVIEW_RESET,\n    SUPPLIER_PRODUCT_UPDATE_REQUEST,\n    SUPPLIER_PRODUCT_UPDATE_SUCCESS,\n    SUPPLIER_PRODUCT_UPDATE_FAIL,\n    SUPPLIER_PRODUCT_UPDATE_RESET,\n    SUPPLIER_PRODUCT_FOR_ALL_REQUEST,\n    SUPPLIER_PRODUCT_FOR_ALL_SUCCESS,\n    SUPPLIER_PRODUCT_FOR_ALL_FAIL\n} from './../constants/supplierConstant'\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case SUPPLIER_PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n        case SUPPLIER_PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case SUPPLIER_PRODUCT_CREATE_FAIL:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const supplierProductListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case SUPPLIER_PRODUCT_LIST_REQUEST:\n            return {\n                loading: true,\n            }\n        case SUPPLIER_PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload,\n            }\n        case SUPPLIER_PRODUCT_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const supplierProdictListMyReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case SUPPLIER_PRODUCT_LIST_MY_REQUEST:\n            return {\n                loading: true,\n            }\n        case SUPPLIER_PRODUCT_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload,\n            }\n        case SUPPLIER_PRODUCT_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const FarmerProductDetailsReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case SUPPLIER_PRODUCT_REQUEST:\n            return { loading: true, ...state }\n        case SUPPLIER_PRODUCT_SUCCESS:\n            return { loading: false, product: action.payload }\n        case SUPPLIER_PRODUCT_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const farmerReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case FARMER_PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n        case FARMER_PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true }\n        case FARMER_PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n        case FARMER_PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const farmerProductUpdateReducer = (state = { productReviewed: {} }, action) => {\n    switch (action.type) {\n        case SUPPLIER_PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n        case SUPPLIER_PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n        case SUPPLIER_PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case SUPPLIER_PRODUCT_UPDATE_RESET:\n            return {\n                productReviewed: {}\n            }\n        default:\n            return state\n    }\n}\n\n// For all\nexport const supplierProductForAllListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case SUPPLIER_PRODUCT_FOR_ALL_REQUEST:\n            return {\n                loading: true,\n            }\n        case SUPPLIER_PRODUCT_FOR_ALL_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload,\n            }\n        case SUPPLIER_PRODUCT_FOR_ALL_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}","import { \n    CART_ADD_ITEM, \n    CART_REMOVE_ITEM, \n    CART_SAVE_SHIPPING_ADDRESSS,\n    CART_SAVE_PAYMENT_METHOD \n} from './../constants/cartConstants'\n\nexport const cartSeedReducer = (state = { cartItems: [], shippingAddress: [] }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.seed === item.seed)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.seed === existItem.seed ? item : x)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.seed !== action.payload),\n            }\n        case CART_SAVE_SHIPPING_ADDRESSS:\n            return {\n                ...state,\n                shippingAddress: action.payload,\n            }\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload,\n            }\n        default:\n            return state\n    }\n}","import {\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_DETAILS_RESET,\n    USER_LIST_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_RESET,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL\n} from \"../constants/userConstants\"\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_DETAILS_RESET:\n            return { user: {} }\n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { ...state, loading: true }\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const userListeReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LIST_RESET:\n            return { users: [] }\n        default:\n            return state\n    }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_UPDATE_RESET:\n            return {\n                user: {}\n            }\n        default:\n            return state\n    }\n}","import React from 'react'\nimport { Link, BrowserRouter } from 'react-router-dom';\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\nimport { Form, Button } from 'react-bootstrap'\n\nimport './Footer.css'\n\nconst Footer = () => {\n    return (\n        <BrowserRouter>\n            <MDBFooter color=\"blue-grey\" className=\"page-footer font-small lighten-5 pt-0\">\n                <div style={{ backgroundColor: \"#008f11\" }}>\n                    <MDBContainer>\n                        <MDBRow className=\"py-4 d-flex align-items-center\">\n                            <MDBCol md=\"6\" lg=\"5\" className=\"text-center text-md-left mb-4 mb-md-0\">\n                                <h6 className=\"mb-0 \" style={{ color: \"white\" }}> Get connected with us on social networks!</h6>\n                            </MDBCol>\n                            <MDBCol md=\"6\" lg=\"7\" className=\"text-center text-md-right\">\n                                <Link to=\"/\" className=\"fb-ic ml-0\">\n                                    <i className=\"fab fa-facebook-f white-text mr-lg-4\"> </i>\n                                </Link>\n                                <Link to=\"/\" className=\"tw-ic\">\n                                    <i className=\"fab fa-twitter white-text mr-lg-4\"> </i>\n                                </Link>\n                                <Link to=\"/\" className=\"gplus-ic\">\n                                    <i className=\"fab fa-google-plus-g white-text mr-lg-4\"> </i>\n                                </Link>\n                                <Link to=\"/\" className=\"li-ic\">\n                                    <i className=\"fab fa-linkedin-in white-text mr-lg-4\"> </i>\n                                </Link>\n                                <Link to=\"/\" className=\"ins-ic\">\n                                    <i className=\"fab fa-instagram white-text mr-lg-4\"> </i>\n                                </Link>\n                            </MDBCol>\n                        </MDBRow>\n                    </MDBContainer>\n                </div>\n                <MDBContainer className=\"mt-5 mb-4 text-center text-md-left\">\n                    <MDBRow className=\"mt-3\">\n                        <MDBCol md=\"3\" lg=\"3    \" xl=\"3\" className=\"mb-4 dark-grey-text\">\n                            <h6 className=\"text-uppercase font-weight-bold\">\n                                <strong>FarmConnect</strong>\n                            </h6>\n                            <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{ width: \"60px\" }} />\n                            <p>\n                                The purpose of FarmConnect is to provide connections between different roles in the agriculture industry. As the farmers are not getting a fair price for their goods because of contractors. This app removes the requirement of contractors for farmers. Farmers can buy their required needs for farming from Sellers and they can also sell their products to the Consumers\n                            </p>\n                        </MDBCol>\n                        <MDBCol md=\"2\" lg=\"2\" xl=\"2\" className=\"mb-4 dark-grey-text\">\n                            <h6 className=\"text-uppercase font-weight-bold\">\n                                <strong>Links</strong>\n                            </h6>\n                            <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{ width: \"60px\" }} />\n                            <p><Link to=\"/farmer\" className=\"dark-grey-text\">Famer</Link></p>\n                            <p><Link to=\"/consumer\" className=\"dark-grey-text\">Consumer </Link></p>\n                            <p><Link to=\"/supplier\" className=\"dark-grey-text\">Supplier</Link></p>\n                            <p><Link to=\"/cart\" className=\"dark-grey-text\">Cart</Link></p>\n                        </MDBCol>\n                        <MDBCol md=\"3\" lg=\"3\" xl=\"4\" className=\"mb-4 dark-grey-text\">\n                            <h6 className=\"text-uppercase font-weight-bold\">\n                                <strong>Contact</strong>\n                            </h6>\n                            <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{ width: \"60px\" }} />\n                            <p><i className=\"fa fa-home mr-3\" /> lagos, Nigeria</p>\n                            <p><i className=\"fa fa-envelope mr-3\" /> info@example.com</p>\n                            <p><i className=\"fa fa-phone mr-3\" /> 08091760116</p>\n                            <p><i className=\"fa fa-print mr-3\" /> 08091760116</p>\n                        </MDBCol>\n                        <MDBCol md=\"3\" lg=\"4\" xl=\"3\" className=\"mb-4 dark-grey-text\">\n                            <h6 className=\"text-uppercase font-weight-bold\">\n                                <strong>Get in touch</strong>\n                            </h6>\n                            <Form>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>Email address</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"Email\" />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Comment</Form.Label>\n                                    <Form.Control as=\"textarea\" rows={3} type=\"text\" placeholder=\"Write Your Thoughts\" />\n                                </Form.Group>\n                                <Button variant=\"primary\" type=\"submit\">Send message</Button>\n                            </Form>\n                        </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n                <div className=\"footer-copyright text-center py-3\">\n                    <MDBContainer fluid>\n                        &copy; {new Date().getFullYear()} Copyright:{\" \"}\n                    FarmConnect\n                </MDBContainer>\n                </div>\n            </MDBFooter>\n        </BrowserRouter>\n    )\n}\n\nexport default Footer\n","import axios from 'axios'\nimport {\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_DETAILS_RESET,\n    USER_LIST_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL\n} from './../constants/userConstants.js'\nimport { ORDER_LIST_MY_RESET } from './../constants/orderConstant'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            },\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login',\n            { email, password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const register = (name, email, password, cropSelection) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            },\n        }\n\n        const { data } = await axios.post(\n            '/api/users/',\n            { name, email, password, cropSelection },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.get(`/api/users`, config)\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const deleteUsers = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        // eslint-disable-next-line no-unused-vars\n        const { data } = await axios.delete(`/api/users/${id}`, config)\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n        dispatch({ type: USER_UPDATE_SUCCESS })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n        dispatch({ type: USER_DETAILS_RESET })\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Nav, Navbar, NavDropdown, Image } from 'react-bootstrap';\nimport './Header.css'\n\nimport { logout } from './../../actions/userActions'\n\nconst Header = () => {\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" fixed=\"top\">\n            <LinkContainer to=\"/\">\n                <Navbar.Brand className=\"nav-cal\" >\n                    <Image width=\"80px\"src=\"/Logo.png\" />\n                </Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto \">\n                    <LinkContainer to=\"/\">\n                        <Nav.Link className=\"nav-cal\">HOME</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/farmer\">\n                        <Nav.Link className=\"nav-cal\">FARMER</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/consumer\">\n                        <Nav.Link className=\"nav-cal\">CONSUMER</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"login?redirect=supplier\">\n                        <Nav.Link className=\"nav-cal\">SUPPLIER</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/cart\" >\n                        <Nav.Link className={`${userInfo ? \"remove-space\" : \"add-space cart nav-cal\"} `}>\n                            <i className=\"fas fa-shopping-cart\"></i>\n                            CART\n                        </Nav.Link>\n                    </LinkContainer>\n                    {\n                        userInfo ? (\n                            <NavDropdown title={userInfo.name.toUpperCase()} id='username'>\n                                {\n                                    userInfo && userInfo.isAdmin && (\n                                        <LinkContainer to='/admin/dashboard'>\n                                            <NavDropdown.Item>DASHBOARD</NavDropdown.Item>\n                                        </LinkContainer>\n                                    )\n                                }\n                                <LinkContainer to='/profile'>\n                                    <NavDropdown.Item>PROFILE</NavDropdown.Item>\n                                </LinkContainer>\n                                <LinkContainer to='/login'>\n                                    <NavDropdown.Item onClick={logoutHandler}>LOGOUT</NavDropdown.Item>\n                                </LinkContainer>\n                            </NavDropdown>\n                        ) : (\n                                <LinkContainer to=\"/login\">\n                                    <Nav.Link className=\"login nav-cal\">SIGN IN</Nav.Link>\n                                </LinkContainer>\n                            )\n                    }\n                    {\n                        userInfo && userInfo.isAdmin && (\n                            <NavDropdown title=\"ADMIN\" id='adminmenu'>\n                                <LinkContainer to='/admin/userlist'>\n                                    <NavDropdown.Item>USERS</NavDropdown.Item>\n                                </LinkContainer>\n                                <LinkContainer to='/admin/productlist'>\n                                    <NavDropdown.Item>PRODUCTS</NavDropdown.Item>\n                                </LinkContainer>\n                                <LinkContainer to='/admin/orderlist'>\n                                    <NavDropdown.Item>ORDERS</NavDropdown.Item>\n                                </LinkContainer>\n                            </NavDropdown>\n                        )\n                    }\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'ínfo'\n}\n\nexport default Message\n","import React, { useState } from 'react'\nimport { css } from \"@emotion/react\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: green;\n`;\n\nconst Loader = () => {\n\n    let [loading] = useState(true);\n    let [color] = useState(\"#24d32b\");\n\n    return (\n        <div className=\"sweet-loading\">\n            <PuffLoader color={color} loading={loading} css={override} size={100} />\n        </div>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React from 'react'\nimport { Helmet } from \"react-helmet\";\n\nconst Meta = ({ title, description, keywords }) => {\n    return (\n        <Helmet>\n           <title>{title}</title> \n           <meta name='description' content={description} />\n           <meta name='keyword' content={keywords} />\n        </Helmet>\n    )\n}\n\nMeta.defaultProps = {\n    title: 'Welcome To FarmConnect',\n    description: 'Agriclutural website by The Department of Agriculture (DoA) of Sri Lanka along with the Keels ',\n    keywords: 'farmers, argio, department of agriculture, agricultural science'\n}\n\nexport default Meta\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n    Form,\n    Button,\n    Row,\n    Col\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message/Message'\nimport Loader from '../Loader/Loader'\nimport FormContainer from '../FormContainer/FormContainer'\nimport { login } from '../../actions/userActions'\nimport Meta from '../Helmet/Meta'\n\nconst LoginComponent = ({ location, history }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, userInfo, error } = userLogin\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [userInfo, history, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <Meta\n                title=\"FarmConnect | Sign In\"\n            />\n            <h1 style={{ marginTop: '120px' }}>Sign In</h1>\n            { error && <Message variant='danger'>{error}</Message>}\n            { loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address<span style={{ color: 'red' }}>*</span></Form.Label>\n                    <Form.Control\n                        type=\"nic\"\n                        placeholder=\"Enter email\"\n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password <span style={{ color: 'red' }}>*</span></Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Enter password\"\n                        value={password}\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">Sign In</Button>\n            </Form>\n            <Row className='py-3'>\n                <Col style={{ marginBottom: '30px' }}>\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginComponent\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n    Form,\n    Button,\n    Row,\n    Col\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../Message/Message'\nimport Loader from '../Loader/Loader'\nimport FormContainer from '../FormContainer/FormContainer'\nimport { register } from '../../actions/userActions'\nimport Meta from '../Helmet/Meta'\n\nconst Register = ({ location, history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [cropSelection, setCropSelection] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { loading, userInfo, error } = userRegister\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [userInfo, history, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password, cropSelection))\n        }\n    }\n\n    return (\n\n        <FormContainer>\n            <Meta\n                title=\"FarmConnect | Register\"\n            />\n            <h1 style={{ marginTop: '120px' }}>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Row>\n                    <Col md={6}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"name\"\n                                placeholder=\"Enter name\"\n                                value={name}\n                                required\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address<span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"nic\"\n                                placeholder=\"Enter email\"\n                                value={email}\n                                required\n                                onChange={(e) => setEmail(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        {/*<Form.Group controlId='cropSelection'>*/}\n                            {/*<Form.Label>Crop Selection (optional)</Form.Label>*/}\n                            {/*<Form.Control*/}\n                                {/*type=\"cropSelection\"*/}\n                                {/*placeholder=\"Enter crop               \"*/}\n                                {/*value={cropSelection}*/}\n                                {/*onChange={(e) => setCropSelection(e.target.value)}*/}\n                            {/*></Form.Control>*/}\n                        {/*</Form.Group>*/}\n                    </Col>\n                    <Col md={6}>\n                        <Form.Group controlId='password'>\n                            <Form.Label>Password <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Enter password\"\n                                value={password}\n                                required\n                                onChange={(e) => setPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='confirmPassword'>\n                            <Form.Label>Confirm password <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Confirm password\"\n                                value={confirmPassword}\n                                required\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Button type=\"submit\" variant=\"primary\">Register</Button>\n                    </Col>\n                </Row>\n            </Form>\n            <Row className='py-3'>\n                <Col style={{ marginBottom: '30px' }}>\n                    Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default Register\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Nav className=\"jusitfy-content-center mb-4\">\n            <Nav.Item>\n                {\n                    step1 \n                        ? <LinkContainer to='/login'>\n                            <Nav.Link>Sign In</Nav.Link>\n                        </LinkContainer>\n                        :  <Nav.Link disabled>Sign In</Nav.Link>\n                }\n            </Nav.Item>\n            <Nav.Item>\n                {\n                    step2 \n                        ? <LinkContainer to='/shipping'>\n                            <Nav.Link>Shipping</Nav.Link>\n                        </LinkContainer>\n                        :  <Nav.Link disabled>Shipping</Nav.Link>\n                }\n            </Nav.Item>\n            <Nav.Item>\n                {\n                    step3\n                        ? <LinkContainer to='/payment'>\n                            <Nav.Link>Payment</Nav.Link>\n                        </LinkContainer>\n                        :  <Nav.Link disabled>Payment</Nav.Link>\n                }\n            </Nav.Item>\n            <Nav.Item>\n                {\n                    step4\n                        ? <LinkContainer to='/placeorder'>\n                            <Nav.Link>Place Order</Nav.Link>\n                        </LinkContainer>\n                        :  <Nav.Link disabled>Place Order</Nav.Link>\n                }\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SAVE,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SAVE,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SAVE,\n    ORDER_PAY_FAIL,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SAVE,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SAVE,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SAVE,\n    ORDER_DELIVER_FAIL,\n} from '../constants/orderConstant'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.post(\n            '/api/orders',\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SAVE,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SAVE,\n            payload: data\n        })\n\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SAVE,\n            payload: data\n        })\n\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${orderId}/pay`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SAVE,\n            payload: data\n        })\n\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/orders/myorders`, config)\n\n        dispatch({\n            type: ORDER_LIST_MY_SAVE,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/orders`, config)\n\n        dispatch({\n            type: ORDER_LIST_SAVE,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: message,\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport {\n    Container,\n    Button,\n    Row,\n    Col,\n    ListGroup,\n    Image,\n    Card\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CheckoutSteps from './../../components/CheckoutSteps/CheckoutSteps'\nimport Message from '../../components/Message/Message'\nimport { createOrder } from './../../actions/orderAction'\nimport Meta from '../Helmet/Meta'\n\nconst PlaceOrder = ({ history }) => {\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cartSeed)\n\n    // Calculate Price\n    const addDecimals = num => {\n        return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)\n    cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 100\n    cart.taxPrice = addDecimals(Number(0.15 * cart.itemsPrice).toFixed(2))\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [history, success])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice\n        }))\n    }\n\n    return (\n        <div style={{ marginTop: '100px' }}>\n            <Container>\n                <Meta\n                    title=\"FarmConnect | Order\"\n                />\n                <Row className=\"justify-content-md-center\">\n                    <Col xs={12} md={6}>\n                        <CheckoutSteps step1 step2 step3 step4 />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={8}>\n                        <ListGroup variant='flush' className=\"mb-3\">\n                            <ListGroup.Item>\n                                <h1>Shipping</h1>\n                                <p>\n                                    <strong>Address : </strong>\n                                    {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                                    {cart.shippingAddress.postalCode},{' '}\n                                    {cart.shippingAddress.country}\n                                </p>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <h2>Payment Method</h2>\n                                <p>\n                                    <strong>Method : </strong>\n                                    {cart.paymentMethod}\n                                </p>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <h2>Order Items</h2>\n                                {cart.cartItems.length === 0\n                                    ? <Message>Your cart is empty</Message>\n                                    : (\n                                        <ListGroup variant=\"flush\">\n                                            {\n                                                cart.cartItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n                                                            <Col>\n                                                                {item.name}\n                                                            </Col>\n                                                            <Col md={4}>\n                                                                {`${item.qty} x ₦ ${item.price} = ₦ ${item.qty * item.price}`}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))\n                                            }\n                                        </ListGroup>\n                                    )\n                                }\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n                    <Col md={4}>\n                        <Card>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h2>Order Summary</h2>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Items</Col>\n                                        <Col>{`₦ ${cart.itemsPrice}`}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Shipping</Col>\n                                        <Col>{`₦ ${cart.shippingPrice}`}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Tax</Col>\n                                        <Col>{`₦ ${cart.taxPrice}`}</Col>\n                                    </Row>\n                                </ListGroup.Item><ListGroup.Item>\n                                    <Row>\n                                        <Col>Total</Col>\n                                        <Col>{`₦ ${cart.totalPrice}`}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    {error && <ListGroup.Item>\n                                        <Message variant=\"danger\">{error}</Message>\n                                    </ListGroup.Item>\n                                    }\n                                    <Button\n                                        type=\"button\"\n                                        className=\"btn-block\"\n                                        disabled={cart.cartItems === 0}\n                                        onClick={placeOrder}\n                                    >Place Order</Button>\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default PlaceOrder\n","import React from 'react'\nimport {\n    Container,\n    Row,\n    Card,\n    CardDeck,\n    Button\n} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport './CardMenuStyles.css'\n\nconst CardMenu = () => {\n    return (\n        <Container><Row>\n            <CardDeck className='card-deck'>\n                <Card border='primary'>\n                    <Card.Body>\n                        <Card.Title className='title'>Farmer</Card.Title>\n                        <Card.Text className='card-text'>If you are a farmer then you are at perfect platfrom from where you can order all of your farming related products and you can sell your production also.</Card.Text>\n                        <Link to='/farmer'>\n                            <Button variant=\"success\" className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\n                        </Link>\n                    </Card.Body>\n                </Card>\n                <Card border='primary'>\n                    <Card.Body>\n                        <Card.Title className='title'>Supplier</Card.Title>\n                        <Card.Text className='card-text'>\n                            Sell your wide variety of products related to farming, through our platform. We have millions of farmers connected from all parts of country.\n                        </Card.Text>\n                        <Link to='login?redirect=supplier'>\n                            <Button variant=\"success\" className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\n                        </Link>\n                    </Card.Body>\n                </Card>\n                <Card border='primary'>\n                    <Card.Body>\n                        <Card.Title className='title'>Consumer</Card.Title>\n                        <Card.Text className='card-text'>\n                            No need to visit field to get grains!!! Just order here and and get all kinds of grains deliverd at your doorstep. Why to wait? Go and order.\n                        </Card.Text>\n                        <Link to='/consumer'>\n                            <Button variant=\"success\" className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\n                        </Link>\n                    </Card.Body>\n                </Card>\n            </CardDeck>\n        </Row></Container>\n    )\n}\n\nexport default CardMenu\n","import React from 'react'\nimport {\n    Col,\n    Container,\n    Row,\n    Image\n} from 'react-bootstrap'\nimport './ourSerices.css'\n\nconst OurServices = () => {\n    return (\n        <Container className=\"main\" fluid>\n            <h1 className=\"main-title\">COMPREHENSIVE SERVICES</h1>\n            {/*<p className=\"description\">*/}\n                {/*Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ac nunc non arcu aliquet sollicitudin. Sed elementum placerat ex. Donec a lectus vel lectus faucibus mattis.*/}\n                {/*Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ac nunc non arcu aliquet sollicitudin. Sed elementum placerat ex. Donec a lectus vel lectus faucibus mattis*/}\n            {/*</p>*/}\n            <Container className=\"services\">\n                <Row>\n                    <Col md={3}>\n                        <h5 className=\"sub-title\">Heavy Machine</h5>\n                        <Image className=\"img\" src=\"images/services/heavy.svg\" fluid />\n                        <p className=\"sub-desc\">No need to worry of labour costing more. Just rent all types of machine here!!</p>\n                    </Col>\n                    <Col md={3}>\n                        <h5 className=\"sub-title\">Gardening Kits</h5>\n                        <Image className=\"img\" src=\"images/services/gardening.svg\" fluid />\n                        <p className=\"sub-desc\">We provides all of the gardening related products i.e seeds, pestisides and heavy machine.</p>\n                    </Col>\n                    <Col md={3}>\n                        <h5 className=\"sub-title\">Supplier</h5>\n                        <Image className=\"img\" src=\"images/services/supplier.svg\" fluid />\n                        <p className=\"sub-desc\">Now you produce. And we are here to sell your product. Just list your sell, and get proper pay for it.</p>\n                    </Col>\n                    <Col md={3}>\n                        <h5 className=\"sub-title\">Consumer</h5>\n                        <Image className=\"img\" src=\"images/services/consumer.svg\" fluid />\n                        <p className=\"sub-desc\">Why to visit Super Store and Pay High? Order all products and get deliver at your doorstep.</p>\n                    </Col>\n                </Row>\n            </Container>\n        </Container>\n    )\n}\n\nexport default OurServices\n","const slider = [\n    {\n        title: \"FarmConnect is a digital marketplace for farmers!\",\n        description: \"'' Agricultural growth is a proven driver of poverty reduction. When agriculture stimulates growth ... the growth is twice as effective in reducing poverty as growth based in other sectors ''\",\n        tag: \"GIZA MDOE\",\n        image: \"https://images.unsplash.com/photo-1574943320219-553eb213f72d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=682&q=80\",\n    },\n    {\n        title: \"Solutions for a healthier, sustainable future\",\n        description: \"'' Agriculture is the greatest and fundamentally the most important of our industries. The cities are but the branches of the tree of national life, the roots of which go deeply into the land. We all flourish or decline with the farmer. ''\",\n        tag: \"BERNARD BARUCH\",\n        image: \"https://images.unsplash.com/photo-1592982537447-7440770cbfc9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1499&q=80\",\n    },\n    {\n        title: \"Helping farmers, And Improving the economy.\",\n        description: \"'' I know of no pursuit in which more real and important services can be rendered to any country than by improving its agriculture, its breed of useful animals, and other branches of a husbandman's cares. ''\",\n        tag: \"GEORGE WASHINGTON\",\n        image: \"https://images.unsplash.com/photo-1523348837708-15d4a09cfac2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\",\n    },\n];\n\nexport default slider;","import React, { useState, useEffect } from 'react';\nimport Slider from \"react-animated-slider\";\nimport data from './sliderData.js';\nimport \"react-animated-slider/build/horizontal.css\";\nimport \"normalize.css/normalize.css\";\nimport './styles/slider-animation.css';\nimport './styles/styles.css'\n\nconst SliderComponent = () => {\n\n    const [slider, setSlider] = useState([]);\n\n    useEffect(() => {\n        setSlider(data)\n    },[])\n\n    return (\n        <div>\n            <Slider className=\"slider-wrapper\">\n                {slider.map((item, index) => (\n                    <div\n                        key={index}\n                        className=\"slider-content\"\n                        style={{ background: `url('${item.image}') no-repeat center center`, marginTop: \"40px\" }}\n                    >\n                        <div className=\"inner\">\n                            <h1>{item.title}</h1>\n                            <p>{item.description} <br />- {item.tag.toLowerCase()}</p>\n                        </div>\n                    </div>\n                ))}\n            </Slider>\n        </div>\n    )\n}\n\nexport default SliderComponent\n","import axios from 'axios'\nimport {\n    SUPPLIER_PRODUCT_CREATE_FAIL,\n    SUPPLIER_PRODUCT_CREATE_REQUEST,\n    SUPPLIER_PRODUCT_CREATE_SUCCESS,\n    SUPPLIER_PRODUCT_LIST_MY_REQUEST,\n    SUPPLIER_PRODUCT_LIST_MY_SUCCESS,\n    SUPPLIER_PRODUCT_LIST_MY_FAIL,\n    SUPPLIER_PRODUCT_LIST_REQUEST,\n    SUPPLIER_PRODUCT_LIST_SUCCESS,\n    SUPPLIER_PRODUCT_LIST_FAIL,\n    SUPPLIER_PRODUCT_REQUEST,\n    SUPPLIER_PRODUCT_SUCCESS,\n    SUPPLIER_PRODUCT_FAIL,\n    FARMER_PRODUCT_CREATE_REVIEW_REQUEST,\n    FARMER_PRODUCT_CREATE_REVIEW_SUCCESS,\n    FARMER_PRODUCT_CREATE_REVIEW_FAIL,\n    SUPPLIER_PRODUCT_UPDATE_FAIL,\n    SUPPLIER_PRODUCT_UPDATE_REQUEST,\n    SUPPLIER_PRODUCT_UPDATE_SUCCESS,\n    SUPPLIER_PRODUCT_FOR_ALL_REQUEST,\n    SUPPLIER_PRODUCT_FOR_ALL_SUCCESS,\n    SUPPLIER_PRODUCT_FOR_ALL_FAIL\n} from './../constants/supplierConstant'\nimport { logout } from './userActions'\n\nexport const createSupplierProduct = ({\n    name,\n    email,\n    address,\n    cropSelection,\n    storage,\n    image,\n    phonenumber,\n    description\n}) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_CREATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.post(\n            '/api/supplier',\n            {\n                name,\n                email,\n                address,\n                cropSelection,\n                storage,\n                image,\n                phonenumber,\n                description\n            },\n            config\n        )\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SUPPLIER_PRODUCT_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const listMyProducts = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_MY_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/supplier/myproducts`, config)\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_MY_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_MY_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const listSupplierProducts = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/supplier`, config)\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const getroductsDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: SUPPLIER_PRODUCT_REQUEST })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/supplier/product/${id}`, config)\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: SUPPLIER_PRODUCT_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: FARMER_PRODUCT_CREATE_REVIEW_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        await axios.post(`/api/supplier/product/${productId}/reviews`, review, config)\n\n        dispatch({\n            type: FARMER_PRODUCT_CREATE_REVIEW_SUCCESS,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: FARMER_PRODUCT_CREATE_REVIEW_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const updateReviewed = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/supplier/product/${product._id}/reviews`, product, config)\n\n        dispatch({ type: FARMER_PRODUCT_CREATE_REVIEW_SUCCESS })\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const updateSupplierProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/supplier/product/${product._id}/edit`, product, config)\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\n// For all\nexport const listSupplierProductsForAll = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_FOR_ALL_REQUEST,\n        })\n\n        const { data } = await axios.get(`/api/supplier/all`)\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_FOR_ALL_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_FOR_ALL_FAIL,\n            payload: message,\n        })\n    }\n}","const MapStyles = [\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#e9e9e9\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 29\n            },\n            {\n                \"weight\": 0.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 18\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#dedede\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": 36\n            },\n            {\n                \"color\": \"#333333\"\n            },\n            {\n                \"lightness\": 40\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            },\n            {\n                \"lightness\": 19\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#fefefe\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#fefefe\"\n            },\n            {\n                \"lightness\": 17\n            },\n            {\n                \"weight\": 1.2\n            }\n        ]\n    }\n]\n\nexport default MapStyles","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Rating.css'\n\nconst Rating = ({ value, text, color }) => {\n    return (\n        <div className=\"rating\">\n            <span>{text && text}</span>\n            <span>\n                <i style={{ color }} className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{ color }} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{ color }} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{ color }} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{ color }} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n\n        </div>\n    )\n}\n\nRating.propTypes = {\n    value: PropTypes.number,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n}\n\nRating.defaultProps = {\n    color: '#47cf38'\n}\n\nexport default Rating\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Image } from 'react-bootstrap'\nimport {\n    GoogleMap,\n    withScriptjs,\n    withGoogleMap,\n    Marker,\n    InfoWindow\n} from 'react-google-maps'\nimport Message from './../../components/Message/Message'\nimport Loader from './../../components/Loader/Loader'\nimport { listSupplierProductsForAll } from './../../actions/supplierProduct'\nimport MapStyles from './MapStyles'\nimport Rating from './Rating/Rating'\n\nconst Map = () => {\n\n    const dispatch = useDispatch()\n\n    const [selectedPlace, setSelectedPlace] = useState(null)\n\n    const supplierProductForAllList = useSelector(state => state.supplierProductForAllList)\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProductForAllList\n\n    useEffect(() => {\n        dispatch(listSupplierProductsForAll())\n    }, [dispatch])\n\n    return (\n        <GoogleMap\n            defaultCenter={{ lat: 6.927079, lng: 79.861244 }}\n            defaultZoom={10}\n            defaultOptions={{ styles: MapStyles }}\n        >\n            {\n                loadingProducts ? <Loader />\n                    : errorProducts\n                        ? <Message variant='danger'>{errorProducts}</Message>\n                        : (\n                            products.map(place => (\n                                <Marker\n                                    key={place._id}\n                                    position={{\n                                        lat: place.latitude,\n                                        lng: place.longitude\n                                    }}\n                                    onClick={() => {\n                                        setSelectedPlace(place)\n                                    }}\n                                    icon={{\n                                        url: '/mapIcon.svg',\n                                        scaledSize: new window.google.maps.Size(25, 25)\n                                    }}\n                                />\n                            ))\n                        )\n\n            }\n            {\n                selectedPlace && (\n                    <InfoWindow\n                        position={{\n                            lat: selectedPlace.latitude,\n                            lng: selectedPlace.longitude\n                        }}\n                        onCloseClick={() => {\n                            setSelectedPlace(null)\n                        }}\n                    >\n                        <div>\n                            <Image className=\"mx-auto d-block img-fluid mb-1\" rounded width=\"120px\" src={selectedPlace.image} alt={selectedPlace.name} />\n                            <h4 style={{ textAlign: \"center\" }}>{selectedPlace.cropSelection}</h4>\n                            <p>\n                                Description: {selectedPlace.description}<br />\n                                {\n                                    selectedPlace.isReviwed\n                                        ? (<>\n                                            <p><Rating text=\"Rating\" value={selectedPlace.rating} /></p>\n                                        </>\n                                        )\n                                        : ''\n                                }\n                            </p>\n                        </div>\n                    </InfoWindow>\n                )\n            }\n        </GoogleMap>\n\n    )\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\n\nexport default WrappedMap\n","import React from 'react'\nimport WrappedMap from './Map'\nimport { Scrollbar } from \"react-scrollbars-custom\";\n\nconst GenralMap = () => {\n    return (\n        <Scrollbar style={{ width: '100%', height: 500 }}>\n            <div style={{ width: '100%', height: '100vh' }}>\n                <WrappedMap\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n                    loadingElement={<div style={{ height: '100%' }} />}\n                    containerElement={<div style={{ height: '400px' }} />}\n                    mapElement={<div style={{ height: '100vh' }} />}\n                />\n            </div>\n        </Scrollbar>\n    )\n}\n\nexport default GenralMap\n","import React from 'react';\n\nimport CardMenu from '../../components/CardMenuSet/CardMenu';\nimport Meta from '../../components/Helmet/Meta';\nimport OurServices from '../../components/OurServices/OurServices';\nimport SliderComponent from '../../components/Slider/Slider';\nimport GenralMap from '../Map/GenralMap';\n\nconst HomeScreen = () => {\n\n    return (\n        <>\n            <Meta />\n            <SliderComponent />\n            <CardMenu />\n            <OurServices />\n            <GenralMap />\n        </>\n    )\n}\n\nexport default HomeScreen;\n","import React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Card, Col, Button } from 'react-bootstrap';\nimport './ConsumerProduts.css'\n\nconst ConsumerProducts = ({ _id, prod_name, image, price, avalaible_location, prod_size }) => {\n    return (\n        <Col sm={12} md={6} lg={4}>\n            <Card className=\"my-3 p-3 \">\n                <Card.Img className=\"image mx-auto\" src={image} variant=\"top\" />\n                <Card.Body>\n                    <LinkContainer to={`/consumer/${_id}`}>\n                        <Card.Title className=\"prod-title\" as=\"div\">\n                            {prod_name}\n                        </Card.Title>\n                    </LinkContainer>\n                    <Card.Text as=\"h5\">\n                        Price: ₦{price} <br />Product Size: {prod_size}\n                    </Card.Text>\n                    <Card.Text as=\"p\">\n                        Location: <span style={{fontWeight:'bold'}}>{avalaible_location}</span>\n                    </Card.Text><br />\n                    <LinkContainer to={`/consumer/${_id}`}>\n                        <Button className=\"btn-preview\" varient=\"success\">Preview here</Button>\n                    </LinkContainer>\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}\n\nexport default ConsumerProducts\n","import axios from 'axios'\nimport {\n    CONSUMER_PRODUCT_LIST_REQUEST,\n    CONSUMER_PRODUCT_LIST_SUCCESS,\n    CONSUMER_PRODUCT_LIST_FAIL,\n    CONSUMER_PRODUCT_DETAILS_REQUEST,\n    CONSUMER_PRODUCT_DETAILS_SUCCESS,\n    CONSUMER_PRODUCT_DETAILS_FAIL,\n    CONSUMER_DELETE_REQUEST,\n    CONSUMER_DELETE_SUCCESS,\n    CONSUMER_DELETE_FAIL,\n    CONSUMER_CREATE_REQUEST,\n    CONSUMER_CREATE_SUCCESS,\n    CONSUMER_CREATE_FAIL,\n    CONSUMER_UPDATE_REQUEST,\n    CONSUMER_UPDATE_SUCCESS,\n    CONSUMER_UPDATE_FAIL,\n    CONSUMER_UPDATE_RESET,\n} from './../constants/productConstants'\n\nexport const listConsumerProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: CONSUMER_PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get('/api/consumer')\n\n        dispatch({\n            type: CONSUMER_PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: CONSUMER_PRODUCT_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const listConsumerProductsDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: CONSUMER_PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/consumer/${id}`)\n\n        dispatch({\n            type: CONSUMER_PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: CONSUMER_PRODUCT_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const deleteConsumerProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CONSUMER_DELETE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        await axios.delete(`/api/consumer/${id}`, config)\n\n        dispatch({\n            type: CONSUMER_DELETE_SUCCESS,\n        })\n    } catch (error) {\n        dispatch({\n            type: CONSUMER_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const createConsumer = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CONSUMER_CREATE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.post(`/api/consumer/`, {}, config)\n\n        dispatch({\n            type: CONSUMER_CREATE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: CONSUMER_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const updateConsumer = (consumer) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CONSUMER_UPDATE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/consumer/${consumer._id}`, consumer, config)\n\n        dispatch({\n            type: CONSUMER_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({ type: CONSUMER_UPDATE_RESET })\n\n    } catch (error) {\n        dispatch({\n            type: CONSUMER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    Container,\n    Row,\n    Button,\n    Alert\n} from 'react-bootstrap';\nimport ConsumerProducts from './../../components/ConsumerProducts/ConsumerProducts'\nimport { listConsumerProducts } from './../../actions/consumerProductAction.js'\nimport Message from './../../components/Message/Message';\nimport Loader from './../../components/Loader/Loader';\nimport './ConsumerStyles.css'\nimport Meta from '../../components/Helmet/Meta';\n\nconst ConsumerScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const consumerProductList = useSelector(state => state.consumerProductList)\n    const { loading, consumerProducts, error } = consumerProductList\n\n    const [numberOfItems, setNumberOfItems] = useState(3);\n\n    useEffect(() => {\n        dispatch(listConsumerProducts())\n    }, [dispatch])\n\n    const showMore = () => {\n        if (numberOfItems + 3 <= consumerProducts.length) {\n            setNumberOfItems(numberOfItems + 3)\n        } else {\n            setNumberOfItems(consumerProducts.length)\n        }\n    }\n\n    return (\n        <div className=\"consumerProductScreen\">\n            <Meta\n                title=\"FarmConnect | Consumer\"\n            />\n            <Container className='consumerContainer'>\n                <h1 className=\"title\">CONSUMER</h1>\n                <h4 className=\"consumer-title\">\n                    No need to visit field to get grains!!! Just order here and and get all kinds of garins deliverd at your doorstep. Why to wait? Go and order.</h4>\n                <br />\n                {\n                    loading ? <Loader />\n                        : error ? <Message variant='danger'>{error}</Message>\n                            : (\n                                <Row>\n                                    {\n                                        consumerProducts\n                                            .slice(0, numberOfItems)\n                                            .map(consumer => (\n                                                <ConsumerProducts\n                                                    key={consumer._id}\n                                                    _id={consumer._id}\n                                                    prod_name={consumer.prod_name}\n                                                    seller_name={consumer.seller_name}\n                                                    image={consumer.image}\n                                                    price={consumer.price}\n                                                    prod_size={consumer.prod_size}\n                                                    avalaible_location={consumer.avalaible_location}\n                                                    quantity={consumer.quantity}\n                                                />\n                                            ))\n                                    }\n                                    {\n                                        numberOfItems >= consumerProducts.length\n                                            ? <Alert style={{ backgroundColor: 'red' }} className=\"col-md-12 text-center\">Finished</Alert>\n                                            : ''\n                                    }\n                                    <Button className=\"col-md-12 text-center\" variant=\"success outline-dark\" onClick={showMore}>Show more</Button>\n                                </Row>\n                            )\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default ConsumerScreen\n","import React from 'react'\nimport {\n    Container,\n    Row,\n    CardDeck,\n    Card,\n    Button\n} from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Meta from '../../components/Helmet/Meta';\nimport './FarmerStyle.css'\n\nconst FarmerScreen = () => {\n    return (\n        <div>\n            <Meta\n                title=\"FarmConnect | Farmers\"\n            />\n            <Container className='farmerContainer'>\n                <h1 className='title'>FARMER</h1>\n                <h4 className=\"farmer-title\">If you are a farmer then you are at perfect platfrom from where you can order all of your farming related products and you can sell your production also.</h4>\n                <Row className=\"row-one justify\">\n                    <CardDeck>\n                        <Card border=\"primary\" style={{ width: '25rem' }}>\n                            <Card.Body>\n                                <Card.Title className=\"card-titile\">Purchase Seeds, Pesticides & Fertilizer</Card.Title>\n                                <LinkContainer to=\"/farmers/purchaseSeeds\">\n                                    <Button className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\n                                </LinkContainer>\n                            </Card.Body>\n                        </Card>\n                        <Card border=\"primary\" style={{ width: '25rem' }}>\n                            <Card.Body>\n                                <Card.Title className=\"card-titile\">Sell Your Farm Produce</Card.Title>\n                                <LinkContainer to=\"/login?redirect=supplier\">\n                                    <Button className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\n                                </LinkContainer>\n                            </Card.Body>\n                        </Card>\n                        <Card border=\"primary\" style={{ width: '25rem' }}>\n                            <Card.Body>\n                                <Card.Title className=\"card-titile\">Lend All of Heavy Machine And Tractros</Card.Title>\n                                <LinkContainer to=\"/farmers/lendMachines\">\n                                    <Button className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\n                                </LinkContainer>\n                            </Card.Body>\n                        </Card>\n                    </CardDeck>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default FarmerScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {\n    Form,\n    Button,\n    Row,\n    Col,\n    Container,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport Message from './../../components/Message/Message'\nimport Loader from './../../components/Loader/Loader'\nimport { createSupplierProduct } from '../../actions/supplierProduct'\n\nconst AddSupplierProduct = () => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [image, setImage] = useState('')\n    const [address, setAddress] = useState('')\n    const [cropSelection, setCropSelection] = useState('')\n    const [description, setDescription] = useState('')\n    const [phonenumber, setPhonenumber] = useState('')\n    const [storage, setStorage] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading, success, error } = productCreate\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n    }, [userInfo, history, dispatch])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createSupplierProduct({\n            name,\n            email,\n            address,\n            cropSelection,\n            storage,\n            image,\n            phonenumber,\n            description,\n        })\n        )\n\n        setName('')\n        setEmail('')\n        setImage('')\n        setAddress('')\n        setCropSelection('')\n        setPhonenumber('')\n        setStorage('')\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            console.error(error)\n            setUploading(false)\n        }\n    }\n\n    return (\n        <Container>\n            {success && <Message variant='success'>Your product has been submitted</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Row>\n                    <Col md={5}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"name\"\n                                placeholder=\"Enter name\"\n                                value={name}\n                                required\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address<span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"nic\"\n                                placeholder=\"Enter email\"\n                                value={email}\n                                required\n                                onChange={(e) => setEmail(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='address'>\n                            <Form.Label>Address <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"address\"\n                                as=\"textarea\" rows={1}\n                                placeholder=\"Enter address\"\n                                value={address}\n                                required\n                                onChange={(e) => setAddress(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='cropSelection'>\n                            <Form.Label>Product Type <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"cropSelection\"\n                                placeholder=\"Enter Crop or Animal or Others\"\n                                value={cropSelection}\n                                required\n                                onChange={(e) => setCropSelection(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='storage'>\n                            <Form.Label>Product Size <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"storage\"\n                                placeholder=\"Enter size (kg)\"\n                                value={storage}\n                                required\n                                onChange={(e) => setStorage(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </Col>\n                    <Col md={5}>\n                        <Form.Group controlId='image'>\n                            <Form.Label>Image <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter image url\"\n                                value={image}\n                                required\n                                onChange={(e) => setImage(e.target.value)}\n                            ></Form.Control>\n                            <Form.File\n                                id='image-file'\n                                label='Choose File'\n                                custom\n                                onChange={uploadFileHandler}\n                            ></Form.File>\n                            {uploading && <Loader />}\n                        </Form.Group>\n                        <Form.Group controlId='phonenumber'>\n                            <Form.Label>Phone Number <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"phonenumber\"\n                                placeholder=\"Enter phonenumber\"\n                                value={phonenumber}\n                                required\n                                onChange={(e) => setPhonenumber(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='description'>\n                            <Form.Label>Description <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                as=\"textarea\" rows={3}\n                                type=\"description\"\n                                placeholder=\"Enter description\"\n                                value={description}\n                                required\n                                onChange={(e) => setDescription(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <br />\n                        <Button type=\"submit\" variant=\"primary\">Submit</Button>\n                    </Col>\n                </Row>\n            </Form>\n        </Container>\n    )\n}\n\nexport default AddSupplierProduct\n\n","import React from 'react'\nimport {\n    Container,\n} from 'react-bootstrap';\nimport Meta from '../../components/Helmet/Meta';\nimport AddSupplierProduct from '../../components/SupplierProduct/AddSupplierProduct';\nimport './supplierStyles.css'\n\nconst SupplierScreen = () => {\n    return (\n        <Container className='supplierContainer'>\n            <Meta\n                title=\"FarmConnect | Supplier\"\n            />\n            <h1 className='title'>SUPPLIER</h1>\n            <h4 className=\"supplier-title\">\n                Sell your wide variety of products related to farming, through our platform. We have lots of customers connected from all parts of country.</h4>\n            <br />\n            <AddSupplierProduct />\n        </Container>\n    )\n}\n\nexport default SupplierScreen","import React, { useState, useEffect, useRef } from 'react'\nimport {\n    Form,\n    Button,\n    Row,\n    Col,\n    Container,\n    Table,\n    Image,\n    Overlay,\n    Popover\n} from 'react-bootstrap'\nimport { Scrollbar } from \"react-scrollbars-custom\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../components/Message/Message'\nimport Loader from './../../components/Loader/Loader'\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions'\nimport { listMyOrders } from './../../actions/orderAction'\nimport { listMyProducts } from './../../actions/supplierProduct'\nimport Meta from '../../components/Helmet/Meta';\n\nconst ProfileScreen = ({ history }) => {\n\n    const [show, setShow] = useState(false);\n    const [target, setTarget] = useState(null);\n    const ref = useRef(null);\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [cropSelection, setCropSelection] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, user, error } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n    const supplierProdictListMy = useSelector(state => state.supplierProdictListMy)\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProdictListMy\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user.name) {\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n                dispatch(listMyProducts())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setCropSelection(user.cropSelection)\n            }\n        }\n    }, [userInfo, history, user, dispatch])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({ id: user._id, name, email, password, cropSelection }))\n        }\n    }\n\n    const handleClick = (event) => {\n        setShow(!show);\n        setTarget(event.target);\n\n    };\n\n\n    return (\n        <Container fluid style={{ marginBottom: '50px' }}>\n            <Meta\n                title=\"FarmConnect | Profile\"\n            />\n            <Row>\n                <Col md={3}>\n                    <h2 style={{ marginTop: '110px' }}>User Profile</h2>\n                    {message && <Message variant='danger'>{message}</Message>}\n                    {error && <Message variant='danger'>{error}</Message>}\n                    {success && <Message variant='success'>Profile Updated!</Message>}\n                    {loading && <Loader />}\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"name\"\n                                placeholder=\"Enter name\"\n                                value={name}\n                                required\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address<span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"nic\"\n                                placeholder=\"Enter email\"\n                                value={email}\n                                required\n                                onChange={(e) => setEmail(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='cropSelection'>\n                            <Form.Label>Crop Selection (optional)</Form.Label>\n                            <Form.Control\n                                type=\"cropSelection\"\n                                placeholder=\"Enter cropSelection\"\n                                value={cropSelection}\n                                onChange={(e) => setCropSelection(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Enter password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='confirmPassword'>\n                            <Form.Label>Confirm password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Confirm password\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Button type=\"submit\" variant=\"primary\">Update</Button>\n                    </Form>\n                </Col>\n                <Col md={9}>\n                    <Scrollbar style={{ width: '100%', height: 630 }}>\n                        <Container fluid>\n                            <Row>\n                                <h2 style={{ marginTop: '110px' }}>My Orders</h2>\n                                {loadingOrders ? <Loader />\n                                    : errorOrders ? <Message variant=\"danger\">{errorOrders}</Message>\n                                        : (\n                                            <Table striped bordered hover responsive className=\"table-sm\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>ID</th>\n                                                        <th>DATE</th>\n                                                        <th>TOTAL</th>\n                                                        <th>PAID</th>\n                                                        <th>DELIVERED</th>\n                                                        <th>MORE</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {orders.map(order => (\n                                                        <tr key={order._id}>\n                                                            <td>{order._id}</td>\n                                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                                            <td>{order.totalPrice}</td>\n                                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) :\n                                                                <i className=\"fas fa-times\" styles={{ color: \"red\" }}></i>\n                                                            }</td>\n                                                            <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) :\n                                                                <i className=\"fas fa-times\" styles={{ color: 'red' }}></i>\n                                                            }</td>\n                                                            <td>\n                                                                <LinkContainer to={`/order/${order._id}`}>\n                                                                    <Button className=\"btn-sm\" variant=\"success\">Details</Button>\n                                                                </LinkContainer>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </Table>\n                                        )\n                                }\n                            </Row>\n                            <Row>\n                                <h2 style={{ marginTop: '110px' }}>My Products</h2>\n                                {loadingProducts ? <Loader />\n                                    : errorProducts ? <Message variant=\"danger\">{errorProducts}</Message>\n                                        : (\n                                            <Table striped bordered hover responsive className=\"table-sm\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>NAME</th>\n                                                        <th>EMAIL/NIC</th>\n                                                        <th>ADDRESS</th>\n                                                        <th>IMAGE</th>\n                                                        <th>CROP</th>\n                                                        <th>REVIEWED</th>\n                                                        <th>EDIT</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {products.map(product => (\n                                                        <tr key={product._id}>\n                                                            <td>{product.name}</td>\n                                                            <td>{product.email}</td>\n                                                            <td>{product.address}</td>\n                                                            <td>\n                                                                <Image width={70} rounded src={product.image} />\n                                                            </td>\n                                                            <td>{product.cropSelection}</td>\n                                                            <td style={{ textAlign: \"center\" }}>\n                                                                {\n                                                                    product.isReviwed ? (\n                                                                        <Button\n                                                                            className=\"mt-2\"\n                                                                            ref={target}\n                                                                            onClick={handleClick}\n                                                                        > Check\n                                                                        </Button>\n                                                                    ) : <i className=\"fas fa-times\" style={{ color: 'red', fontSize: '24px' }}></i>\n                                                                }\n                                                                <Overlay\n                                                                    show={show}\n                                                                    target={target}\n                                                                    placement=\"bottom\"\n                                                                    container={ref.current}\n                                                                    containerPadding={10}\n                                                                >\n                                                                    <Popover id=\"popover-contained\">\n                                                                        <Popover.Title as=\"h3\">Rating: {product.rating}</Popover.Title>\n                                                                        {\n                                                                            product.reviews.map(review => (\n                                                                                <Popover.Content key={review._id}>\n                                                                                    <strong>Feedback: {review.comment}</strong>\n                                                                                </Popover.Content>\n                                                                            ))\n                                                                        }\n                                                                    </Popover>\n                                                                </Overlay>\n                                                            </td>\n                                                            <td>\n                                                                <LinkContainer to={`/supplierproducts/${product._id}/edit`}>\n                                                                    <Button variant=\"light\" className=\"btn btn-sm\">\n                                                                        <i className=\"fas fa-edit\"></i>\n                                                                    </Button>\n                                                                </LinkContainer>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </Table>\n                                        )\n                                }\n                            </Row>\n                        </Container>\n                    </Scrollbar>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default ProfileScreen \n","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport './SideBar.css'\n\nconst SideBarComponents = () => {\n    return (\n        <div className=\"sidebar\" style={{ marginTop: \"10px\", marginBottom: \"60px\" }}>\n            <ListGroup className=\"list-group-sidebar\">\n                <LinkContainer className='link-contain' to='/admin/dashboard'>\n                    <ListGroup.Item className=\"border-0 item\">\n                        <i className=\"fas icon-fas fa-chart-line\"></i> Dashboard\n                    </ListGroup.Item>\n                </LinkContainer>\n                <LinkContainer className='link-contain' to='/admin/profile'>\n                    <ListGroup.Item className=\"border-0 item\">\n                        <i className=\"fas icon-fas fa-user-alt\"></i> Profile\n                    </ListGroup.Item>\n                </LinkContainer>\n                <LinkContainer className='link-contain' to='/admin/userlist'>\n                    <ListGroup.Item className=\"border-0 item\">\n                        <i className=\"fas icon-fas fa-users-cog\"></i> User List\n                    </ListGroup.Item>\n                </LinkContainer>\n                <LinkContainer className='link-contain' to='/admin/productlist'>\n                    <ListGroup.Item className=\"border-0 item\">\n                        <i className=\"fas icon-fas fa-list\"></i>Product List\n                    </ListGroup.Item>\n                </LinkContainer>\n                <LinkContainer className='link-contain' to='/admin/orderlist'>\n                    <ListGroup.Item className=\"border-0 item\">\n                        <i className=\"fas icon-fas fa-sort-amount-up-alt\"></i>Order List\n                    </ListGroup.Item>\n                </LinkContainer>\n                <LinkContainer className='link-contain' to='/admin/supplierproducts'>\n                    <ListGroup.Item className=\"border-0 item\">\n                    <i className=\"fas icon-fas fa-seedling\"></i>Harvest\n                    </ListGroup.Item>\n                </LinkContainer>\n                <LinkContainer className='link-contain' to='/admin/map'>\n                    <ListGroup.Item className=\"border-0 item\">\n                        <i className=\"fas icon-fas fa-map-marker-alt\"></i>Map\n                    </ListGroup.Item>\n                </LinkContainer>\n            </ListGroup>\n        </div>\n    )\n}\n\nexport default SideBarComponents\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card, Row, Col } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { listUsers } from '../../../../actions/userActions'\nimport { listOrders } from '../../../../actions/orderAction'\nimport './StatCard.css'\n\nconst StatCards = () => {\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const [userCount, setUserCount] = useState(0)\n    const [orderCount, setOrderCount] = useState(0)\n\n    const userList = useSelector(state => state.userList)\n    const { users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const orderList = useSelector(state => state.orderList)\n    const { orders } = orderList\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n            dispatch(listOrders())\n\n            const userLen = users.length;\n            const orderLen = orders.length;\n\n            setUserCount(userLen)\n            setOrderCount(orderLen)\n        } else {\n            history.push('/login')\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch, userInfo, history])\n\n    return (\n        <Row>\n            <Card className=\"card-set-deck\" border=\"primary\" style={{ width: '16rem' }}>\n                <Card.Body>\n                    <Row>\n                        <Col>\n                            <i className=\"fas card-icon fa-users\"></i>\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Card.Text>\n                                    <span className=\"card-text-name\">All Users</span>\n                                </Card.Text>\n                            </Row>\n                            <Row>\n                                <Card.Text>\n                                    <span className=\"card-count\">{userCount}</span>\n                                </Card.Text>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n\n            <Card className=\"card-set-deck\" border=\"primary\" style={{ width: '16rem' }}>\n                <Card.Body>\n                    <Row>\n                        <Col>\n                            <i className=\"fas fa-sort-amount-down-alt\"></i>\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Card.Text>\n                                    <span className=\"card-text-name\">All Orders</span>\n                                </Card.Text>\n                            </Row>\n                            <Row>\n                                <Card.Text>\n                                    <span className=\"card-count\">{orderCount}</span>\n                                </Card.Text>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n\n            <Card className=\"card-set-deck\" border=\"primary\" style={{ width: '16rem' }}>\n                <Card.Body>\n                    <Row>\n                        <Col>\n                            <i className=\"fas fa-truck\"></i>\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Card.Text>\n                                    <span className=\"card-text-name\">Delivered</span>\n                                </Card.Text>\n                            </Row>\n                            <Row>\n                                <Card.Text>\n                                    <span className=\"card-count\">{orderCount}\n                                    </span>\n                                </Card.Text>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </Row>\n    )\n}\n\nexport default StatCards\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Container } from 'react-bootstrap';\nimport { Bar } from 'react-chartjs-2';\nimport Message from '../../../Message/Message'\nimport Loader from '../../../Loader/Loader'\nimport { listOrders } from '../../../../actions/orderAction'\n\nconst BarChart = () => {\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error } = orderList\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo])\n\n\n    const data = {\n        labels: ['December', 'January'],\n        datasets: [\n            {\n                label: 'Order List',\n                backgroundColor: 'rgba(255,99,132,0.2)',\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: [1, 5, 0]\n            }\n        ]\n    };\n\n    return (\n        <Container style={{ marginTop: \"40px\" }}>\n            <h4>Orders</h4>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Bar\n                            data={data}\n                            width={100}\n                            height={180}\n                            options={{\n                                maintainAspectRatio: false\n                            }}\n                        />\n                    )\n            }\n        </Container>\n    )\n}\n\nexport default BarChart\n","import React, { useEffect } from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport { useHistory } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../../components/Message/Message'\nimport Loader from './../../../../components/Loader/Loader'\nimport { listSupplierProducts } from './../../../../actions/supplierProduct'\n\nconst data = {\n    labels: ['paddy', 'seeds', 'fruits'],\n    datasets: [{\n        data: [2, 1, 3],\n        backgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56'\n        ],\n        hoverBackgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56'\n        ]\n    }]\n};\n\nconst DoughnutComponent = () => {\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const supplierProductList = useSelector(state => state.supplierProductList)\n    const { loading: loadingProducts, error: errorProducts } = supplierProductList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (!userInfo.isAdmin && !userInfo) {\n            history.push('/login')\n        } else {\n            dispatch(listSupplierProducts())\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <>\n            <h4 style={{ marginTop: \"40px\", textAlign: \"center\" }}>Suppliers</h4>\n            {loadingProducts ? <Loader />\n                : errorProducts ? <Message variant='danger'>{errorProducts}</Message>\n                    : (\n                        <Doughnut data={data} />\n                    )\n            }\n        </>\n    )\n}\n\nexport default DoughnutComponent\n","import React, { useEffect } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../../components/Message/Message'\nimport Loader from './../../../../components/Loader/Loader'\nimport { listUsers } from './../../../../actions/userActions'\n\nconst data = {\n    labels: ['December', 'January'],\n    datasets: [\n        {\n            label: 'Users of Months',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [1, 4, 0, 8]\n        }\n    ]\n};\n\nconst LineChart = ({ history }) => {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <>\n            <h4 style={{ marginTop: \"40px\", textAlign: \"center\" }}>Users</h4>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Line data={data} />\n                    )\n            }\n        </>\n    )\n}\n\nexport default LineChart\n","import React from 'react'\nimport {\n    Col,\n    Container,\n    Row,\n} from 'react-bootstrap'\nimport './listStyles.css'\nimport { Scrollbar } from \"react-scrollbars-custom\";\nimport StatCards from './StatCards/StatCards';\nimport Bar from './BarChart/Bar';\nimport DoughnutComponent from './Doughnut/Doughnut';\nimport LineChart from './LineChart/LineChart';\n\nconst StatisticsList = () => {\n    return (\n        <Scrollbar style={{ width: '100%', height: 500 }}>\n            <Container>\n                <Row className=\"list-container\">\n                    <StatCards />\n                </Row>\n                <Row>\n                    <Bar />\n                </Row>\n                <Row style={{ marginBottom: \"50px\"}}>\n                    <Col md={6}>\n                        <LineChart />\n                    </Col>\n                    <Col md={6}>\n                        <DoughnutComponent />\n                    </Col>\n                </Row>\n            </Container>\n        </Scrollbar>\n    )\n}\n\nexport default StatisticsList\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\nimport StatisticsList from '../../components/DashBoard/Statistics/StatisticsList';\nimport Meta from '../../components/Helmet/Meta';\n\nconst DashboardScreen = () => {\n    return (\n        <div style={{ marginTop: \"110px\" }}>\n            <Meta\n                title=\"FarmConnect | Admin Dashboard\"\n            />\n            <Container fluid>\n                <Row>\n                    <Col md={3}>\n                        <h4>Dashboard</h4>\n                    </Col>\n                    <Col md={9}>\n                        <h4 style={{ marginLeft: \"30px\" }}>Overall Statistics</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={3}>\n                        <SideBarComponents />\n                    </Col>\n                    <Col md={9}>\n                        <StatisticsList />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default DashboardScreen\n","import React, { useState, useEffect } from 'react'\nimport {\n    Form,\n    Button,\n    Row,\n    Col,\n    Container,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../components/Message/Message'\nimport Loader from './../../../components/Loader/Loader'\nimport { getUserDetails, updateUserProfile } from './../../../actions/userActions'\nimport { listMyOrders } from './../../../actions/orderAction'\n\nconst EditProfile = ({ history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [cropSelection, setCropSelection] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, user, error } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user.name) {\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setCropSelection(user.cropSelection)\n            }\n        }\n    }, [userInfo, history, user, dispatch])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({ id: user._id, name, email, password, cropSelection }))\n        }\n    }\n\n    return (\n        <Container style={{ marginBottom: '50px', marginTop: '20px' }}>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {success && <Message variant='success'>Profile Updated!</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Row>\n                    <Col md={5}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"name\"\n                                placeholder=\"Enter name\"\n                                value={name}\n                                required\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address<span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"Enter email\"\n                                value={email}\n                                required\n                                onChange={(e) => setEmail(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='cropSelection'>\n                            <Form.Label>Crop Selection (optional)</Form.Label>\n                            <Form.Control\n                                type=\"cropSelection\"\n                                placeholder=\"Enter cropSelection\"\n                                value={cropSelection}\n                                onChange={(e) => setCropSelection(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </Col>\n                    <Col md={5}>\n                        <Form.Group controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Enter password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='confirmPassword'>\n                            <Form.Label>Confirm password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Confirm password\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Button type=\"submit\" variant=\"primary\">Update</Button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default EditProfile \n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport EditProfile from '../../components/DashBoard/Profile/EditProfile'\nimport Meta from '../../components/Helmet/Meta'\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\n\nconst ProfileScreen = () => {\n    return (\n        <div style={{ marginTop: \"110px\" }}>\n            <Meta\n                title=\"FarmConnect | Admin Profile\"\n            />\n            <Container fluid>\n                <Row>\n                    <Col md={3}>\n                        <h4>Admin Profile</h4>\n                    </Col>\n                    <Col md={9}>\n                        <h4 style={{ marginLeft: \"30px\" }}>Edit Profile</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={3}>\n                        <SideBarComponents />\n                    </Col>\n                    <Col md={9}>\n                        <EditProfile />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default ProfileScreen\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Rating.css'\n\nconst Rating = ({ value, text, color }) => {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{color}} className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{color}} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{color}} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{color}} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{color}} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nRating.propTypes ={\n    value: PropTypes.number,\n    text: PropTypes.string.isRequired, \n    color: PropTypes.string,\n}\n\nRating.defaultProps = {\n    color: '#47cf38'\n}\n\nexport default Rating\n","import React from 'react';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Card, Col, Button } from 'react-bootstrap';\nimport './PurchaseSeeds.css'\nimport Rating from '../Rating/Rating';\n\nconst PurchaseSeeds = ({ _id, name, rating, image, reviews, price }) => {\n    return (\n        <Col sm={12} md={6} lg={4}>\n            <Card className=\"my-3 p-3 \">\n                <Card.Img className=\"image card-image mx-auto\" src={image} variant=\"top\" />\n                <Card.Body>\n                    <LinkContainer to={`/farmers/purchaseSeeds/${_id}`}>\n                        <Card.Title className=\"title\">\n                            <strong>{name}</strong>\n                        </Card.Title>\n                    </LinkContainer>\n                    <Card.Text>\n                        <Rating\n                            value={rating}\n                            text={`${reviews} reviews`}\n                        />\n                    </Card.Text>\n                    <Card.Text>\n                        <h4> ₦ {price}</h4>\n                    </Card.Text>\n                    <LinkContainer to={`/farmers/purchaseSeeds/${_id}`}>\n                        <Button className=\"btn-preview\" varient=\"success\">Preview here</Button>\n                    </LinkContainer>\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}\n\nexport default PurchaseSeeds\n","import axios from 'axios'\nimport {\n    PRODUCT_SEED_LIST_REQUEST,\n    PRODUCT_SEED_LIST_SUCCESS,\n    PRODUCT_SEED_LIST_FAIL,\n    PRODUCT_SEED_DETAILS_REQUEST,\n    PRODUCT_SEED_DETAILS_SUCCESS,\n    PRODUCT_SEED_DETAILS_FAIL,\n    SEED_DELETE_REQUEST,\n    SEED_DELETE_SUCCESS,\n    SEED_DELETE_FAIL,\n    SEED_CREATE_REQUEST,\n    SEED_CREATE_SUCCESS,\n    SEED_CREATE_FAIL,\n    SEED_UPDATE_REQUEST,\n    SEED_UPDATE_FAIL,\n    SEED_UPDATE_SUCCESS,\n    SEED_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL\n} from './../constants/productConstants.js'\nimport { logout } from './userActions'\n\nexport const listSeedProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_SEED_LIST_REQUEST })\n\n        const { data } = await axios.get('/api/seeds')\n\n        dispatch({\n            type: PRODUCT_SEED_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_SEED_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const listSeedProductsDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_SEED_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/seeds/${id}`)\n\n        dispatch({\n            type: PRODUCT_SEED_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_SEED_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const deleteSeedProducts = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: SEED_DELETE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        await axios.delete(`/api/seeds/${id}`, config)\n\n        dispatch({\n            type: SEED_DELETE_SUCCESS,\n        })\n    } catch (error) {\n        dispatch({\n            type: SEED_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const createSeedProducts = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: SEED_CREATE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.post(`/api/seeds`, {}, config)\n\n        dispatch({\n            type: SEED_CREATE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: SEED_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const updateSeedProducts = (seed) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: SEED_UPDATE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/seeds/${seed._id}`, seed, config)\n\n        dispatch({\n            type: SEED_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({ type: SEED_UPDATE_RESET })\n\n    } catch (error) {\n        dispatch({\n            type: SEED_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (\n    dispatch,\n    getState\n  ) => {\n    try {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      await axios.post(`/api/seeds/${productId}/reviews`, review, config)\n  \n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\n      })\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload: message,\n      })\n    }\n  }","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Row, Button, Alert } from 'react-bootstrap'\nimport PurchaseSeeds from '../../components/PurchaseSeeds/PurchaseSeeds';\nimport './Farmer_ProductSeedStyles.css'\n\nimport Message from './../../components/Message/Message';\nimport Loader from './../../components/Loader/Loader';\n\nimport { listSeedProducts } from './../../actions/productSeedActions'\nimport Meta from '../../components/Helmet/Meta';\n\nconst Farmer_ProductSeedScreen = () => {\n    const dispatch = useDispatch()\n\n    const prodcutSeedList = useSelector(state => state.prodcutSeedList)\n    const { loading, error, productSeeds } = prodcutSeedList\n\n    const [numberOfItems, setNumberOfItems] = useState(3);\n\n    useEffect(() => {\n        dispatch(listSeedProducts())\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch])\n\n    const showMore = () => {\n        if (numberOfItems + 3 <= productSeeds.length) {\n            setNumberOfItems(numberOfItems + 3)\n        } else {\n            setNumberOfItems(productSeeds.length)\n        }\n    }\n\n    return (\n\n        <div className=\"ProductSeedScreen\">\n            <Meta\n                title=\"FarmConnect | Farmer Seeds\"\n            />\n            <Container>\n                <h1 className=\"p-3\" style={{ textAlign: 'center' }}>Latest Seeds</h1>\n                {\n                    loading\n                        ? <Loader />\n                        : error ? <Message variant='danger'>{error}</Message>\n                            :\n                            (<Row>\n                                {\n                                    productSeeds\n                                        .slice(0, numberOfItems)\n                                        .map(seed => (\n                                            <PurchaseSeeds\n                                                key={seed._id}\n                                                _id={seed._id}\n                                                name={seed.name}\n                                                image={seed.image}\n                                                rating={seed.rating}\n                                                reviews={seed.numReviews}\n                                                price={seed.price}\n                                            />\n                                        ))\n                                }\n                                {\n                                    numberOfItems >= productSeeds.length\n                                        ? <Alert style={{ backgroundColor: 'red' }} className=\"col-md-12 text-center\">Finished</Alert>\n                                        : ''\n                                }\n                                <Button className=\"col-md-12 text-center\" variant=\"success outline-dark\" onClick={showMore}>Show more</Button>\n                            </Row>)\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default Farmer_ProductSeedScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport Rating from '../../components/Rating/Rating';\nimport {\n    Col,\n    Container,\n    Row,\n    Image,\n    ListGroup,\n    Card,\n    Button,\n    Form\n} from 'react-bootstrap';\nimport './SeedProduct.css'\n\nimport { listSeedProductsDetails, createProductReview } from './../../actions/productSeedActions'\nimport Loader from '../../components/Loader/Loader';\nimport Message from '../../components/Message/Message';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../../constants/productConstants'\nimport Meta from '../../components/Helmet/Meta';\n\nconst SeedProductScreen = ({ history, match }) => {\n    const [qty, setQty] = useState(1);\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const prodcutSeedDetails = useSelector(state => state.prodcutSeedDetails)\n    const { loading, error, productSeed } = prodcutSeedDetails\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\n    const {\n        success: successProductReview,\n        loading: loadingProductReview,\n        error: errorProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n        }\n        if (!productSeed._id || productSeed._id !== match.params.id) {\n            dispatch(listSeedProductsDetails(match.params.id))\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(\n            createProductReview(match.params.id, {\n                rating,\n                comment,\n            })\n        )\n    }\n\n    return (\n        <div className=\"productScreen\">\n            <Meta\n                title=\"FarmConnect | Seed\"\n            />\n            <Container>\n                <Link className=\"btn btn-go-back btn-dark\" to=\"/farmers/purchaseSeeds\">GO BACK</Link>\n                {\n                    loading ?\n                        <Loader />\n                        : error\n                            ? <Message variant='danger'>{error}</Message>\n                            : (\n                                <Row className=\"p-3 seed-product\" >\n                                    <Col md={6}>\n                                        <Image className=\"mx-auto image-seed\" src={productSeed.image} alt={productSeed.name} width={350} />\n                                    </Col>\n                                    <Col md={3}>\n                                        <ListGroup className=\"borderless\" variant='flush'>\n                                            <ListGroup.Item>\n                                                <h2>{productSeed.name}</h2>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Rating value={productSeed.rating} text={`${productSeed.numReviews} reviews`} />\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <h4>Price: {productSeed.price}</h4>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <p><span style={{fontWeight:\"bold\"}}>Description:</span><br /> {productSeed.description}</p>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Col>\n                                    <Col md={3}>\n                                        <Card>\n                                            <ListGroup variant='flush'>\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Price:</Col>\n                                                        <Col><strong>₦{productSeed.price}</strong></Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Status:</Col>\n                                                        <Col>\n                                                            {productSeed.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                                {\n                                                    productSeed.countInStock > 0 && (\n                                                        <ListGroup.Item>\n                                                            <Row>\n                                                                <Col>Qty</Col>\n                                                                <Col>\n                                                                    <Form.Control as='select' value={qty} onChange={(e => setQty(e.target.value))}>\n                                                                        {\n                                                                            [...Array(productSeed.countInStock).keys()]\n                                                                                .map(x =>\n                                                                                    <option\n                                                                                        key={x + 1}\n                                                                                        value={x + 1}\n                                                                                    >{x + 1}</option>)\n                                                                        }\n                                                                    </Form.Control>\n                                                                </Col>\n                                                            </Row>\n                                                        </ListGroup.Item>\n                                                    )\n                                                }\n                                                <ListGroup.Item>\n                                                    <Button type=\"button\" className=\"btn btn-block\" onClick={addToCartHandler}>Add To Cart</Button>\n                                                </ListGroup.Item>\n                                            </ListGroup>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            )\n                }\n                <Row>\n                    <Col md={6}>\n                        <h2>Reviews</h2>\n                        {productSeed.reviews.length === 0 && <Message>No Reviews</Message>}\n                        <ListGroup variant='flush'>\n                            {productSeed.reviews.map((review) => (\n                                <ListGroup.Item key={review._id}>\n                                    <strong>{review.name}</strong>\n                                    <Rating value={review.rating} />\n                                    <p>{review.createdAt.substring(0, 10)}</p>\n                                    <p>{review.comment}</p>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    </Col>\n                    <Col md={6}>\n                        <ListGroup>\n                            <ListGroup.Item>\n                                <h2>Write a Customer Review</h2>\n                                {successProductReview && (\n                                    <Message variant='success'>\n                                        Review submitted successfully\n                                    </Message>\n                                )}\n                                {loadingProductReview && <Loader />}\n                                {errorProductReview && (\n                                    <Message variant='danger'>{errorProductReview}</Message>\n                                )}\n                                {userInfo ? (\n                                    <Form onSubmit={submitHandler}>\n                                        <Form.Group controlId='rating'>\n                                            <Form.Label>Rating</Form.Label>\n                                            <Form.Control\n                                                as='select'\n                                                value={rating}\n                                                onChange={(e) => setRating(e.target.value)}\n                                            >\n                                                <option value=''>Select...</option>\n                                                <option value='1'>1 - Poor</option>\n                                                <option value='2'>2 - Fair</option>\n                                                <option value='3'>3 - Good</option>\n                                                <option value='4'>4 - Very Good</option>\n                                                <option value='5'>5 - Excellent</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group controlId='comment'>\n                                            <Form.Label>Comment</Form.Label>\n                                            <Form.Control\n                                                as='textarea'\n                                                row='3'\n                                                value={comment}\n                                                onChange={(e) => setComment(e.target.value)}\n                                            ></Form.Control>\n                                        </Form.Group>\n                                        <Button\n                                            disabled={loadingProductReview}\n                                            type='submit'\n                                            variant='primary'\n                                        >Submit</Button>\n                                    </Form>\n                                ) : (\n                                        <p>\n                                            Please <Link to='/login'>sign in</Link> to write a review{' '}\n                                        </p>\n                                    )}\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n                </Row>\n            </Container>\n            <br /><br />\n        </div>\n    )\n}\n\nexport default SeedProductScreen\n","import React from 'react';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Card, Col, Button } from 'react-bootstrap';\nimport './LendMachines.css'\n\nconst LendMachines = ({ _id, name, image, targetPlant, price }) => {\n    return (\n        <Col sm={12} md={6} lg={4}>\n            <Card className=\"my-3 p-3\">\n                <Card.Img className=\"image card-image mx-auto\" src={image} variant=\"top\" />\n                <Card.Body>\n                    <LinkContainer to={`/farmers/lendMachines/${_id}`}>\n                        <Card.Title className=\"title\">\n                            <strong>{name}</strong>\n                        </Card.Title>\n                    </LinkContainer>\n                    <Card.Text>\n                        <span style={{fontWeight:\"bold\"}}>Target Plants </span><br /> {targetPlant}\n                    </Card.Text>\n                    <Card.Text>\n                        <h3>₦{price}</h3>\n                    </Card.Text>\n                    <LinkContainer to={`/farmers/lendMachines/${_id}`}>\n                        <Button className=\"btn-preview\" varient=\"success\">Preview here</Button>\n                    </LinkContainer>\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}\n\nexport default LendMachines\n","import axios from 'axios'\nimport {\n    PRODUCT_MACHINE_LIST_REQUEST,\n    PRODUCT_MACHINE_LIST_SUCCESS,\n    PRODUCT_MACHINE_LIST_FAIL,\n    PRODUCT_MACHINE_DETAILS_REQUEST,\n    PRODUCT_MACHINE_DETAILS_SUCCESS,\n    PRODUCT_MACHINE_DETAILS_FAIL,\n    MACHINE_DELETE_REQUEST,\n    MACHINE_DELETE_SUCCESS,\n    MACHINE_DELETE_FAIL,\n    MACHINE_CREATE_REQUEST,\n    MACHINE_CREATE_SUCCESS,\n    MACHINE_CREATE_FAIL,\n    MACHINE_UPDATE_REQUEST,\n    MACHINE_UPDATE_SUCCESS,\n    MACHINE_UPDATE_FAIL,\n    MACHINE_UPDATE_RESET,\n} from './../constants/productConstants.js'\n\nexport const listLendMachineProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_MACHINE_LIST_REQUEST })\n\n        const { data } = await axios.get('/api/lendMachines')\n\n        dispatch({\n            type: PRODUCT_MACHINE_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_MACHINE_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const listLendMachineProductsDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_MACHINE_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/lendMachines/${id}`)\n\n        dispatch({\n            type: PRODUCT_MACHINE_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_MACHINE_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const deleteLendMachineProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: MACHINE_DELETE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        await axios.delete(`/api/lendMachines/${id}`, config)\n\n        dispatch({\n            type: MACHINE_DELETE_SUCCESS,\n        })\n    } catch (error) {\n        dispatch({\n            type: MACHINE_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const createLendMachine = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: MACHINE_CREATE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.post(`/api/lendMachines`, {}, config)\n\n        dispatch({\n            type: MACHINE_CREATE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: MACHINE_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const updateLendMachine = (machine) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: MACHINE_UPDATE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/lendMachines/${machine._id}`, machine, config)\n\n        dispatch({\n            type: MACHINE_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({ type: MACHINE_UPDATE_RESET })\n        \n    } catch (error) {\n        dispatch({\n            type: MACHINE_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Row, Button, Alert } from 'react-bootstrap'\nimport LendMachines from './../../components/LendMachines//LendMachines';\n\nimport './Farmer_LendMachine.css'\nimport Message from './../../components/Message/Message';\nimport Loader from './../../components/Loader/Loader';\n\nimport { listLendMachineProducts } from './../../actions/productLendMachinesActions'\nimport Meta from '../../components/Helmet/Meta';\n\nconst Farmer_LendScreen = () => {\n    const dispatch = useDispatch()\n\n    const productLendMachinesList = useSelector(state => state.productLendMachinesList)\n    const { loading, error, productLendMachines } = productLendMachinesList\n\n    const [numberOfItems, setNumberOfItems] = useState(3);\n\n    useEffect(() => {\n        dispatch(listLendMachineProducts())\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch])\n\n    const showMore = () => {\n        if (numberOfItems + 3 <= productLendMachines.length) {\n            setNumberOfItems(numberOfItems + 3)\n        } else {\n            setNumberOfItems(productLendMachines.length)\n        }\n    }\n\n    return (\n\n        <div className=\"MachineLendScreen\">\n            <Meta\n                title=\"FarmConnect | Farmer Machines\"\n            />\n            <Container>\n                <h1 className=\"p-3\" style={{ textAlign: 'center' }}>All Machines</h1>\n                {\n                    loading\n                        ? <Loader />\n                        : error ? <Message variant='danger'>{error}</Message>\n                            : (\n                                <Row>\n                                    {\n                                        productLendMachines\n                                            .slice(0, numberOfItems)\n                                            .map(machine => (\n                                                <LendMachines\n                                                    key={machine._id}\n                                                    _id={machine._id}\n                                                    name={machine.name}\n                                                    image={machine.image}\n                                                    targetPlant={machine.target_plant}\n                                                    price={machine.price}\n                                                    quantity={machine.quantity}\n                                                />\n                                            ))\n                                    }\n                                    {\n                                        numberOfItems >= productLendMachines.length\n                                            ? <Alert style={{ backgroundColor: 'red' }} className=\"col-md-12 text-center\">Finished</Alert>\n                                            : ''\n                                    }\n                                    <Button className=\"col-md-12 text-center\" variant=\"success outline-dark\" onClick={showMore}>show more</Button>\n                                </Row>\n                            )\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default Farmer_LendScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport {\n    Col,\n    Container,\n    Row,\n    Image,\n    ListGroup,\n    Card,\n    Button,\n    Form\n} from 'react-bootstrap';\nimport './LendMachineScreen.css';\n\nimport { listLendMachineProductsDetails } from './../../actions/productLendMachinesActions'\nimport Loader from '../../components/Loader/Loader';\nimport Message from '../../components/Message/Message';\nimport Meta from '../../components/Helmet/Meta';\n\nconst LendMachineProduct = ({ history, match }) => {\n    const [qty, setQty] = useState(1);\n\n    const dispatch = useDispatch()\n\n    const productLendMachinesDetails = useSelector(state => state.productLendMachinesDetails)\n    const { loading, error, productLendMachines } = productLendMachinesDetails\n\n    useEffect(() => {\n        dispatch(listLendMachineProductsDetails(match.params.id))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch, match])\n\n    const addtoCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n    return (\n        <div className=\"productScreen\">\n            <Meta\n                title=\"FarmConnect | Machine\"\n            />\n            <Container>\n                <Link className=\"btn btn-go-back btn-dark\" to=\"/farmers/lendMachines\">GO BACK</Link>\n                {\n                    loading\n                        ? <Loader />\n                        : error\n                            ? <Message variant='danger'>{error}</Message>\n                            : (\n                                <Row className=\"p-3 seed-product\" >\n                                    <Col md={6}>\n                                        <Image className=\"mx-auto image-machine\" src={productLendMachines.image} alt={productLendMachines.name} width={200} />\n                                    </Col>\n                                    <Col md={3}>\n                                        <ListGroup className=\"borderless\" variant='flush'>\n                                            <ListGroup.Item>\n                                                <h2>{productLendMachines.name}</h2>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <h4>Price: {productLendMachines.price}</h4>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                            <p><span style={{fontWeight:\"bold\"}}>Description:</span><br /> {productLendMachines.description}</p>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <p>Quantity Available: {productLendMachines.quantity}</p>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Col>\n                                    <Col md={3}>\n                                        <Card>\n                                            <ListGroup variant='flush'>\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Machine Power:</Col>\n                                                        <Col><strong>{productLendMachines.machine_power}</strong></Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Target Plant:</Col>\n                                                        <Col>\n                                                            {productLendMachines.target_plant}\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                                {\n                                                    productLendMachines.quantity > 0 && (\n                                                        <ListGroup.Item>\n                                                            <Row>\n                                                                <Col>Qty</Col>\n                                                                <Col>\n                                                                    <Form.Control as='select' value={qty} onChange={(e => setQty(e.target.value))}>\n                                                                        {\n                                                                            [...Array(productLendMachines.quantity).keys()]\n                                                                                .map(x =>\n                                                                                    <option\n                                                                                        key={x + 1}\n                                                                                        value={x + 1}\n                                                                                    >{x + 1}</option>)\n                                                                        }\n                                                                    </Form.Control>\n                                                                </Col>\n                                                            </Row>\n                                                        </ListGroup.Item>\n                                                    )\n                                                }\n                                                <ListGroup.Item>\n                                                    <Button type=\"button\" className=\"btn btn-block\" onClick={addtoCartHandler} >Add To Cart</Button>\n                                                </ListGroup.Item>\n                                            </ListGroup>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            )\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default LendMachineProduct\n","import axios from 'axios'\nimport { \n    CART_ADD_ITEM, \n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESSS,\n    CART_SAVE_PAYMENT_METHOD\n} from './../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    try {\n        const { data } = await axios.get(`/api/seeds/${id}`)\n        dispatch({\n            type: CART_ADD_ITEM,\n            payload: {\n                seed: data._id,\n                name: data.name,\n                image: data.image,\n                price: data.price,\n                countInStock: data.countInStock,\n                qty,\n            }\n        })\n    } catch (error) {\n        try {\n            const { data } = await axios.get(`/api/lendMachines/${id}`)\n            dispatch({\n                type: CART_ADD_ITEM,\n                payload: {\n                    seed: data._id,\n                    name: data.name,\n                    image: data.image,\n                    price: data.price,\n                    countInStock: data.quantity,\n                    qty,\n                }\n            })\n        } catch (error) { \n            const { data } = await axios.get(`/api/consumer/${id}`)\n            dispatch({\n                type: CART_ADD_ITEM,\n                payload: {\n                    seed: data._id,\n                    name: data.prod_name,\n                    image: data.image,\n                    price: data.price,\n                    countInStock: data.quantity,\n                    qty,\n                }\n            })\n        }\n    }\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cartSeed.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cartSeed.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESSS,\n        payload: data\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useState } from 'react'\nimport {\n    Form,\n    Button,\n    Col,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CheckoutSteps from './../../components/CheckoutSteps/CheckoutSteps'\nimport FormContainer from '../../components/FormContainer/FormContainer'\nimport { savePaymentMethod } from './../../actions/cartActions.js'\nimport Meta from '../../components/Helmet/Meta'\n\nconst PaymentScreen = ({ history }) => {\n\n    const cart = useSelector(state => state.cartSeed)\n    const { shippingAddress } = cart\n\n    if (!shippingAddress) {\n        history.push('/shipping')\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <div style={{ marginTop: '100px' }}>\n            <FormContainer>\n                <Meta\n                    title=\"FarmConnect | Payment\"\n                />\n                <CheckoutSteps step1 step2 step3 />\n                <h1>Payment Method</h1>\n                <Form onSubmit={submitHandler} style={{ marginBottom: '40px' }}>\n                    <Form.Group>\n                        <Form.Label as='legend'>Select Method</Form.Label>\n\n                        <Col>\n                            <Form.Check\n                                type='radio'\n                                label='Paypal or Credit Card'\n                                id='paypal'\n                                name='paymentMethod'\n                                value='PayPal'\n                                checked\n                                onChange={(e) => setPaymentMethod(e.target.value)}\n                            ></Form.Check>\n                            <Form.Check\n                                type='radio'\n                                label='Stripe'\n                                id='Stripe'\n                                name='paymentMethod'\n                                value='Stripe'\n                                checked\n                                onChange={(e) => setPaymentMethod(e.target.value)}\n                            ></Form.Check>\n                        </Col>\n                    </Form.Group>\n                    <Button type='submit'>Continue</Button>\n                </Form>\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport {\n    Col,\n    Container,\n    Row,\n    Image,\n    ListGroup,\n    Card,\n    Button,\n    Form\n} from 'react-bootstrap';\nimport './consumerStyles.css';\n\nimport Loader from '../../components/Loader/Loader';\nimport Message from '../../components/Message/Message';\nimport { listConsumerProductsDetails } from '../../actions/consumerProductAction.js'\nimport Meta from '../../components/Helmet/Meta';\n\nconst ConsumerProductDetailScreen = ({ history, match }) => {\n    const [qty, setQty] = useState(1);\n\n    const dispatch = useDispatch()\n\n    const consumerProductDetails = useSelector(state => state.consumerProductDetails)\n    const { loading, error, consumerProduct } = consumerProductDetails\n\n    useEffect(() => {\n        dispatch(listConsumerProductsDetails(match.params.id))\n    }, [dispatch, match])\n\n    const addtoCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    return (\n        <div className=\"productScreen\">\n            <Meta\n                title=\"FarmConnect | Consumer Product\"\n            />\n            <Container>\n                <Link className=\"btn btn-go-back btn-dark\" to=\"/consumer\">GO BACK</Link>\n                {\n                    loading ?\n                        <Loader />\n                        : error\n                            ? <Message variant='danger'>{error}</Message>\n                            : (\n                                <Row className=\"p-3 seed-product\" >\n                                    <Col md={6}>\n                                        <Image className=\"mx-auto image-seed\"\n                                            src={consumerProduct.image}\n                                            alt={consumerProduct.prod_name}\n                                            width={300}\n                                        />\n                                    </Col>\n                                    <Col md={3}>\n                                        <ListGroup className=\"borderless\" variant='flush'>\n                                            <ListGroup.Item>\n                                                <h2>{consumerProduct.prod_name}</h2>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <h4>Seller: {consumerProduct.seller_name}</h4>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <h4>Price: {consumerProduct.price}</h4>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <p>Avalaible Location: {consumerProduct.avalaible_location}</p>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Col>\n                                    <Col md={3}>\n                                        <Card>\n                                            <ListGroup variant='flush'>\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Price:</Col>\n                                                        <Col><strong>₦{consumerProduct.price}</strong></Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Status:</Col>\n                                                        <Col>\n                                                            {consumerProduct.quantity > 0 ? 'In Stock' : 'Out Of Stock'}\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                                {\n                                                    consumerProduct.quantity > 0 && (\n                                                        <ListGroup.Item>\n                                                            <Row>\n                                                                <Col>Qty</Col>\n                                                                <Col>\n                                                                    <Form.Control as='select' value={qty} onChange={(e => setQty(e.target.value))}>\n                                                                        {\n                                                                            [...Array(consumerProduct.quantity).keys()]\n                                                                                .map(x =>\n                                                                                    <option\n                                                                                        key={x + 1}\n                                                                                        value={x + 1}\n                                                                                    >{x + 1}</option>)\n                                                                        }\n                                                                    </Form.Control>\n                                                                </Col>\n                                                            </Row>\n                                                        </ListGroup.Item>\n                                                    )\n                                                }\n                                                <ListGroup.Item>\n                                                    <Button type=\"button\" className=\"btn btn-block\" onClick={addtoCartHandler}>Add To Cart</Button>\n                                                </ListGroup.Item>\n                                            </ListGroup>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            )\n                }\n            </Container>\n        </div>\n    )\n}\n\n\nexport default ConsumerProductDetailScreen\n","import React, { useState } from 'react'\nimport {\n    Form,\n    Button,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CheckoutSteps from './../../components/CheckoutSteps/CheckoutSteps'\nimport FormContainer from '../../components/FormContainer/FormContainer'\nimport { saveShippingAddress } from './../../actions/cartActions.js'\nimport Meta from '../../components/Helmet/Meta'\n\nconst ShippingScreen = ({ history }) => {\n\n    const cart = useSelector(state => state.cartSeed)\n    const { shippingAddress } = cart\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <div style={{ marginTop: '100px' }}>\n            <FormContainer>\n                <Meta\n                    title=\"FarmConnect | Shipping\"\n                />\n                <CheckoutSteps step1 step2 />\n                <h1>Shipping</h1>\n                <Form onSubmit={submitHandler} style={{ marginBottom: '40px' }}>\n                    <Form.Group controlId='address'>\n                        <Form.Label>Address <span style={{ color: 'red' }}>*</span></Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter address\"\n                            value={address}\n                            required\n                            onChange={(e) => setAddress(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='city'>\n                        <Form.Label>City <span style={{ color: 'red' }}>*</span></Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter City\"\n                            value={city}\n                            required\n                            onChange={(e) => setCity(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='postalCode'>\n                        <Form.Label>Postal Code <span style={{ color: 'red' }}>*</span></Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter postal code\"\n                            value={postalCode}\n                            required\n                            onChange={(e) => setPostalCode(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='country'>\n                        <Form.Label>Country <span style={{ color: 'red' }}>*</span></Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Country\"\n                            value={country}\n                            required\n                            onChange={(e) => setCountry(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Button type='submit'>Continue</Button>\n                </Form>\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport {\n    Container,\n    Row,\n    Col,\n    ListGroup,\n    Image,\n    Card,\n    Button\n} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './../../components/Loader/Loader'\nimport Message from '../../components/Message/Message'\nimport { getOrderDetails, payOrder, deliverOrder } from './../../actions/orderAction'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from './../../constants/orderConstant'\nimport Meta from '../../components/Helmet/Meta'\n\nconst OrderScreen = ({ match }) => {\n\n    const orderId = match.params.id\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { success: successPay, loading: loadingPay } = orderPay\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { success: successDeliver, loading: loadingDeliver } = orderDeliver\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        // Add paypal script to body\n        const addPayPalScript = async () => {\n            const { data: clientId } = await axios.get('/api/config/paypal')\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script.onload = () => {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n\n        if (!order || successPay || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n\n    }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo])\n\n    const onSuccessPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n    // const itemsPrice = order.totalPrice - (order.taxPrice + order.shippingPrice)\n\n    return (\n        <div>\n            <Meta\n                title=\"FarmConnect | Order\"\n            />\n            {\n                loading\n                    ? <Loader />\n                    : error ? <Message variant=\"danger\">{error}</Message>\n                        : (\n                            <Container style={{ marginTop: '120px' }}>\n                                <h2>Order {order._id}</h2>\n                                <Row>\n                                    <Col md={8}>\n                                        <ListGroup variant='flush' className=\"mb-3\">\n                                            <ListGroup.Item>\n                                                <h1>Shipping</h1>\n                                                <p>\n                                                    <strong>Name: </strong>{order.user.name}\n                                                </p>\n                                                <p>\n                                                    <strong>Email / NIC: </strong>\n                                                    <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                                                </p>\n                                                <p>\n                                                    <strong>Address : </strong>\n                                                    {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                                                    {order.shippingAddress.postalCode},{' '}\n                                                    {order.shippingAddress.country}\n                                                </p>\n                                                {order.isDelivered\n                                                    ? <Message variant=\"success\">Delivered on {order.deliveredAt}</Message>\n                                                    : <Message variant=\"danger\">Not Delivered</Message>\n                                                }\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <h2>Payment Method</h2>\n                                                <p>\n                                                    <strong>Method : </strong>\n                                                    {order.paymentMethod}\n                                                </p>\n                                                {order.isPaid\n                                                    ? <Message variant=\"success\">Paid on {order.paidAt}</Message>\n                                                    : <Message variant=\"danger\">Not Paid</Message>\n                                                }\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <h2>Order Items</h2>\n                                                {order.length === 0\n                                                    ? <Message>Order is empty</Message>\n                                                    : (\n                                                        <ListGroup variant=\"flush\">\n                                                            {\n                                                                order.orderItems.map((item, index) => (\n                                                                    <ListGroup.Item key={index}>\n                                                                        <Row>\n                                                                            <Col md={1}>\n                                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                                            </Col>\n                                                                            <Col>\n                                                                                {item.name}\n                                                                            </Col>\n                                                                            <Col md={4}>\n                                                                                {`${item.qty} x ₦ ${item.price} = ₦ ${item.qty * item.price}`}\n                                                                            </Col>\n                                                                        </Row>\n                                                                    </ListGroup.Item>\n                                                                ))\n                                                            }\n                                                        </ListGroup>\n                                                    )\n                                                }\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Col>\n                                    <Col md={4}>\n                                        <Card>\n                                            <ListGroup variant=\"flush\">\n                                                <ListGroup.Item>\n                                                    <h2>Order Summary</h2>\n                                                </ListGroup.Item>\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Total Price</Col>\n                                                        <Col>{`₦ ${(order.totalPrice - (order.taxPrice + order.shippingPrice).toFixed(2))}`}</Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Shipping</Col>\n                                                        <Col>{`₦ ${order.shippingPrice}`}</Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Tax</Col>\n                                                        <Col>{`₦ ${order.taxPrice}`}</Col>\n                                                    </Row>\n                                                </ListGroup.Item><ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Total</Col>\n                                                        <Col>{`₦ ${order.totalPrice}`}</Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                                {\n                                                    !order.isPaid && (\n                                                        <ListGroup.Item>\n                                                            { loadingPay && <Loader />}\n                                                            { !sdkReady ? <Loader /> : (\n                                                                <PayPalButton\n                                                                    amount={order.totalPrice}\n                                                                    onSuccess={onSuccessPaymentHandler}\n                                                                />\n                                                            )}\n                                                        </ListGroup.Item>\n                                                    )\n                                                }\n                                                {loadingDeliver && <Loader />}\n                                                {\n                                                    userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                                        <ListGroup.Item>\n                                                            <Button\n                                                                type='button'\n                                                                className='btn btn-block'\n                                                                onClick={deliverHandler}\n                                                            > Mark as delivered </Button>\n                                                        </ListGroup.Item>\n                                                    )\n                                                }\n                                            </ListGroup>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        )\n            }\n        </div>\n    )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Message from './../../components/Message/Message';\nimport { addToCart, removeFromCart } from './../../actions/cartActions'\nimport { Row, Col, ListGroup, Image, Button, Form, Container, Card } from 'react-bootstrap';\nimport Meta from '../../components/Helmet/Meta';\n\nconst Cart = ({ match, location, history }) => {\n\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n\n    const cartSeed = useSelector((state) => state.cartSeed)\n    const { cartItems } = cartSeed\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Container style={{ marginTop: '100px', marginBottom: '50px' }}>\n            <Meta\n                title=\"FarmConnect | Cart\"\n            />\n            <Row>\n                <Col md={8}>\n                    <h1>Shopping Cart</h1>\n                    {\n                        cartItems.length === 0 ? (\n                            <Message variant='danger'>\n                                Your cart is empty <Link to='/'>GO BACK</Link>\n                            </Message>\n                        ) : (\n                                <ListGroup variant='flush' >\n                                    {cartItems.map((item) => (\n                                        <ListGroup.Item key={item.seed} style={{ marginTop: '10px' }}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col md={3}>\n                                                    <Link to={`/farmers/purchaseSeeds/${item.seed}`}>{item.name}</Link>\n                                                </Col>\n                                                <Col md={2}>₦{item.price}</Col>\n                                                <Col md={2}>\n                                                    <Form.Control\n                                                        as='select'\n                                                        value={item.qty}\n                                                        onChange={(e) =>\n                                                            dispatch(\n                                                                addToCart(item.seed, Number(e.target.value))\n                                                            )\n                                                        }\n                                                    >\n                                                        {[...Array(item.countInStock).keys()].map((x) => (\n                                                            <option key={x + 1} value={x + 1}>\n                                                                {x + 1}\n                                                            </option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Col>\n                                                <Col md={2}>\n                                                    <Button\n                                                        type='button'\n                                                        variant='light'\n                                                        onClick={() => removeFromCartHandler(item.seed)}\n                                                    >\n                                                        <i className='fas fa-trash'></i>\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                </Col>\n                <Col md={4}>\n                    <Card style={{ marginTop: '50px' }}>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                                ₦ {cartItems\n                                    .reduce((acc, item) => acc + item.qty * item.price, 0)\n                                    .toFixed(2)}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cartItems.length === 0}\n                                    onClick={checkoutHandler}\n                                >\n                                    Proceed To Checkout\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Cart\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {\n    Table,\n    Button,\n    Container,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../..//../components/Message/Message'\nimport Loader from '../../../components/Loader/Loader'\nimport { listUsers, deleteUsers } from './../../../actions/userActions'\n\nconst UserList = ({ history }) => {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, successDelete, userInfo])\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure')) {\n            dispatch(deleteUsers(id))\n        }\n    }\n\n    return (\n        <div>\n            <LinkContainer style={{ float: 'right' }} to='/register'>\n                <Button className=\"mr-3 mb-3\">ADD ADMIN</Button>\n            </LinkContainer>\n            <Container>\n                {loading ? <Loader />\n                    : error ? <Message variant='danger'>{error}</Message>\n                        : (\n                            <Table style={{ marginBottom: '223px' }} striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <td>ID</td>\n                                        <td>NAME</td>\n                                        <td>CROP SELECTION</td>\n                                        <td>EMAIL / NIC</td>\n                                        <td>ADMIN</td>\n                                        <td>EDIT / DELETE</td>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        users.map(user => (\n                                            <tr key={user._id}>\n                                                <td>{user._id}</td>\n                                                <td>{user.name}</td>\n                                                {\n                                                    user.cropSelection\n                                                        ? <td>{user.cropSelection}</td>\n                                                        : <td style={{ color: 'red' }}>No Crop Selected</td>\n                                                }\n                                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                                                <td>\n                                                    {\n                                                        user.isAdmin ? (\n                                                            <i className=\"fas fa-check\" style={{ color: 'green' }}></i>\n                                                        ) : <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                                                    }\n                                                </td>\n                                                <td>\n                                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                        <Button variant=\"light\" className=\"btn btn-sm\">\n                                                            <i className=\"fas fa-edit\"></i>\n                                                        </Button>\n                                                    </LinkContainer>\n                                                    <Button\n                                                        variant=\"danger\"\n                                                        className=\"btn-sm mr-2\"\n                                                        onClick={() => deleteHandler(user._id)}\n                                                    >\n                                                        <i className=\"fas fa-trash-alt\"></i>\n                                                    </Button>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </Table>\n                        )\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default UserList\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport UserList from '../../components/DashBoard/UserList/UserList'\nimport Meta from '../../components/Helmet/Meta'\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\n\nconst UserListScreen = () => {\n    return (\n        <div style={{ marginTop: \"110px\" }}>\n            <Meta\n                title=\"FarmConnect | Admin Users\"\n            />\n            <Container fluid>\n                <Row>\n                    <Col md={3}>\n                        <h4>FarmConnect Users</h4>\n                    </Col>\n                    <Col md={9}>\n                        <h4 style={{ marginLeft: \"30px\" }}>User List</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={3}>\n                        <SideBarComponents />\n                    </Col>\n                    <Col md={9}>\n                        <UserList />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n    Form,\n    Button,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../../components/Message/Message'\nimport Loader from '../../components/Loader/Loader'\nimport FormContainer from '../../components/FormContainer/FormContainer'\nimport { getUserDetails, updateUser } from '../../actions/userActions'\nimport { USER_UPDATE_RESET } from './../../constants/userConstants'\nimport Meta from '../../components/Helmet/Meta'\n\nconst UserEditScreen = ({ match, history }) => {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [cropSelection, setCropSelection] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, user, error } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = userUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userList')\n        } else {\n            if (!user.name || user._id !== userId) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setCropSelection(user.cropSelection)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n    }, [user, userId, dispatch, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n    }\n\n    return (\n        <>\n            <Meta\n                title=\"FarmConnect | Admin User Edit\"\n            />\n            <FormContainer>\n                <h1 style={{ marginTop: '120px' }}>Edit User</h1>\n                <Link to='/admin/userList' className=\"btn btn-light my-2\">GO BACK</Link>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler} style={{ marginBottom: '50px' }}>\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    type=\"name\"\n                                    placeholder=\"Enter name\"\n                                    value={name}\n                                    required\n                                    onChange={(e) => setName(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address<span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    type=\"nic\"\n                                    placeholder=\"Enter email\"\n                                    value={email}\n                                    required\n                                    onChange={(e) => setEmail(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='cropSelection'>\n                                <Form.Label>Crop Selection (optional)</Form.Label>\n                                <Form.Control\n                                    type=\"cropSelection\"\n                                    placeholder=\"Enter crop               \"\n                                    value={cropSelection}\n                                    onChange={(e) => setCropSelection(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='isAdmin'>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label=\"Is Admin\"\n                                    value={isAdmin}\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                ></Form.Check>\n                            </Form.Group>\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\n                        </Form>\n                    )\n                }\n            </FormContainer>\n        </>\n    )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {\n    Table,\n    Button,\n    Row,\n    Col,\n    Container\n} from 'react-bootstrap'\nimport { useHistory } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../../components/Message/Message'\nimport Loader from './../../../../components/Loader/Loader'\nimport { listSeedProducts, deleteSeedProducts, createSeedProducts } from './../../../../actions/productSeedActions'\nimport { SEED_CREATE_RESET } from './../../../../constants/productConstants'\n\nconst SeedList = () => {\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const prodcutSeedList = useSelector(state => state.prodcutSeedList)\n    const { loading: loadingSeed, error: errorSeed, productSeeds } = prodcutSeedList\n\n    const prodcutSeedDelete = useSelector(state => state.prodcutSeedDelete)\n    const { success: successSeedDelete, loading: loadingDelete, error: errorDelete } = prodcutSeedDelete\n\n    const seedCreate = useSelector(state => state.seedCreate)\n    const {\n        success: successSeedCreate,\n        loading: loadingCreate,\n        error: errorCreate,\n        product: productCreate\n    } = seedCreate\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        dispatch({ type: SEED_CREATE_RESET })\n        if (!userInfo.isAdmin && !userInfo) {\n            history.push('/login')\n        } else {\n            if (successSeedCreate) {\n                history.push(`/admin/productlist/seed/${productCreate._id}/edit`)\n            } else {\n                dispatch(listSeedProducts())\n            }\n        }\n    }, [dispatch, history, userInfo, successSeedDelete, successSeedCreate, productCreate])\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure')) {\n            dispatch(deleteSeedProducts(id))\n        }\n    }\n\n    const createSeedProductHandler = () => {\n        dispatch(createSeedProducts())\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <h1 style={{ marginBottom: '20px' }}>Seeds</h1>\n                </Col>\n                <Col className=\"text-right\">\n                    <Button className='my-3' onClick={createSeedProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n            { loadingCreate && <Loader />}\n            { loadingDelete && <Loader />}\n            { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n            { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {loadingSeed ? <Loader />\n                : errorSeed ? <Message variant='danger'>{errorSeed}</Message>\n                    : (\n                        <Table style={{ marginBottom: '50px' }} striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <td>ID</td>\n                                    <td>NAME</td>\n                                    <td>CATEGORY</td>\n                                    <td>PRICE</td>\n                                    <td>EDIT / DELETE</td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    productSeeds.map(productSeed => (\n                                        <tr key={productSeed._id}>\n                                            <td>{productSeed._id}</td>\n                                            <td>{productSeed.name}</td>\n                                            <td>{productSeed.category}</td>\n                                            <td>{productSeed.price}</td>\n                                            <td>\n                                                <LinkContainer to={`/admin/productlist/seed/${productSeed._id}/edit`}>\n                                                    <Button variant=\"light\" className=\"btn btn-sm\">\n                                                        <i className=\"fas fa-edit\"></i>\n                                                    </Button>\n                                                </LinkContainer>\n                                                <Button\n                                                    variant=\"danger\"\n                                                    className=\"btn-sm mr-2\"\n                                                    onClick={() => deleteHandler(productSeed._id)}\n                                                >\n                                                    <i className=\"fas fa-trash-alt\"></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                        </Table>\n                    )\n            }\n        </Container>\n    )\n}\n\nexport default SeedList\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {\n    Table,\n    Button,\n    Container,\n    Col,\n    Row\n} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../../components/Message/Message'\nimport Loader from './../../../../components/Loader/Loader'\nimport { listLendMachineProducts, deleteLendMachineProduct, createLendMachine } from './../../../../actions/productLendMachinesActions'\nimport { MACHINE_CREATE_RESET } from './../../../../constants/productConstants'\n\nconst SeedList = () => {\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const productLendMachinesList = useSelector(state => state.productLendMachinesList)\n    const { loading: loadingMachine, error: errorMachine, productLendMachines } = productLendMachinesList\n\n    const productLendMachinesDelete = useSelector(state => state.productLendMachinesDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productLendMachinesDelete\n\n    const LendMachinesCreate = useSelector(state => state.LendMachinesCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: productCreate } = LendMachinesCreate\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        dispatch({ type: MACHINE_CREATE_RESET })\n        if (!userInfo.isAdmin && !userInfo) {\n            history.push('/login')\n        } else {\n            if (successCreate) {\n                history.push(`/admin/productlist/machine/${productCreate._id}/edit`)\n            } else {\n                dispatch(listLendMachineProducts())\n            }\n        }\n    }, [dispatch, history, userInfo, successDelete, successCreate, productCreate])\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure')) {\n            dispatch(deleteLendMachineProduct(id))\n        }\n    }\n\n    const createMachineProductHandler = () => {\n        dispatch(createLendMachine())\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <h1 style={{ marginBottom: '20px' }}>Lend Machines</h1>\n                </Col>\n                <Col className=\"text-right\">\n                    <Button className='my-3' onClick={createMachineProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n            { loadingCreate && <Loader />}\n            { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n            { loadingDelete && <Loader />}\n            { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {loadingMachine ? <Loader />\n                : errorMachine ? <Message variant='danger'>{errorMachine}</Message>\n                    : (\n                        <Table style={{ marginBottom: '50px' }} striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <td>ID</td>\n                                    <td>NAME</td>\n                                    <td>TARGET PLANT</td>\n                                    <td>MACHINE POWER</td>\n                                    <td>EDIT / DELETE</td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    productLendMachines.map(machine => (\n                                        <tr key={machine._id}>\n                                            <td>{machine._id}</td>\n                                            <td>{machine.name}</td>\n                                            <td>{machine.target_plant}</td>\n                                            <td>{machine.machine_power}</td>\n                                            <td>\n                                                <LinkContainer to={`/admin/productlist/machine/${machine._id}/edit`}>\n                                                    <Button variant=\"light\" className=\"btn btn-sm\">\n                                                        <i className=\"fas fa-edit\"></i>\n                                                    </Button>\n                                                </LinkContainer>\n                                                <Button\n                                                    variant=\"danger\"\n                                                    className=\"btn-sm mr-2\"\n                                                    onClick={() => deleteHandler(machine._id)}\n                                                >\n                                                    <i className=\"fas fa-trash-alt\"></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                        </Table>\n                    )\n            }\n        </Container>\n    )\n}\n\nexport default SeedList\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {\n    Table,\n    Button,\n    Row,\n    Col,\n    Container\n} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../../components/Message/Message'\nimport Loader from './../../../../components/Loader/Loader'\nimport { listConsumerProducts, deleteConsumerProduct, createConsumer } from './../../../../actions/consumerProductAction'\nimport { CONSUMER_CREATE_RESET } from './../../../../constants/productConstants'\n\nconst ConsumerList = () => {\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const consumerProductList = useSelector(state => state.consumerProductList)\n    const { loading: loadingConsumer, error: errorConsumer, consumerProducts } = consumerProductList\n\n    const consumerProductDelete = useSelector(state => state.consumerProductDelete)\n    const { loading: deleteLoadingConsumer, error: errorDeleteConsumer, success: successDelete } = consumerProductDelete\n\n    const consumerCreate = useSelector(state => state.consumerCreate)\n    const {\n        loading: createLoadingConsumer,\n        error: errorcreateConsumer,\n        success: successCreate,\n        product: consumerProduct\n    } = consumerCreate\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        dispatch({ type: CONSUMER_CREATE_RESET })\n        if (!userInfo.isAdmin && !userInfo) {\n            history.push('/login')\n        } else {\n            if (successCreate) {\n                history.push(`/admin/productlist/consumer/${consumerProduct._id}/edit`)\n            } else {\n                dispatch(listConsumerProducts())\n            }\n        }\n    }, [dispatch, history, userInfo, successDelete, successCreate, consumerProduct])\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure')) {\n            dispatch(deleteConsumerProduct(id))\n        }\n    }\n\n    const createConsumerProductHandler = () => {\n        dispatch(createConsumer())\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <h1 style={{ marginBottom: '20px' }}>Consumer</h1>\n                </Col>\n                <Col className=\"text-right\">\n                    <Button className='my-3' onClick={createConsumerProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n            { createLoadingConsumer && <Loader />}\n            { errorcreateConsumer && <Message variant='danger'>{errorcreateConsumer}</Message>}\n            { deleteLoadingConsumer && <Loader />}\n            { errorDeleteConsumer && <Message variant='danger'>{errorDeleteConsumer}</Message>}\n            {loadingConsumer ? <Loader />\n                : errorConsumer ? <Message variant='danger'>{errorConsumer}</Message>\n                    : (\n                        <Table style={{ marginBottom: '50px' }} striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <td>ID</td>\n                                    <td>SELLER NAME</td>\n                                    <td>PRODUCT NAME</td>\n                                    <td>AVALAIBLE LOCATION</td>\n                                    <td>EDIT / DELETE</td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    consumerProducts.map(consumer => (\n                                        <tr key={consumer._id}>\n                                            <td>{consumer._id}</td>\n                                            <td>{consumer.seller_name}</td>\n                                            <td>{consumer.prod_name}</td>\n                                            <td>{consumer.avalaible_location}</td>\n                                            <td>\n                                                <LinkContainer to={`/admin/productlist/consumer/${consumer._id}/edit`}>\n                                                    <Button variant=\"light\" className=\"btn btn-sm\">\n                                                        <i className=\"fas fa-edit\"></i>\n                                                    </Button>\n                                                </LinkContainer>\n                                                <Button\n                                                    variant=\"danger\"\n                                                    className=\"btn-sm mr-2\"\n                                                    onClick={() => deleteHandler(consumer._id)}\n                                                >\n                                                    <i className=\"fas fa-trash-alt\"></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                        </Table>\n                    )\n            }\n        </Container>\n    )\n}\n\nexport default ConsumerList\n","import React from 'react'\nimport {\n    Container,\n    Row,\n} from 'react-bootstrap'\nimport './listStyles.css'\nimport { Scrollbar } from \"react-scrollbars-custom\";\nimport SeedList from './SeedList/SeedList'\nimport LendMachineList from './LendMachineList/LendMachineList'\nimport ConsumerList from './ConsumerList/ConsumerList'\n\nconst ProductListHome = () => {\n\n    return (\n        <Scrollbar style={{ width: '100%', height: 450 }}>\n            <Container>\n                <Row className=\"list-container\">\n                    <SeedList />\n                    <LendMachineList />\n                    <ConsumerList />\n                </Row>\n            </Container>\n        </Scrollbar>\n    )\n}\n\nexport default ProductListHome\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport ProductListHome from '../../components/DashBoard/ProductList/ProductListHome'\nimport Meta from '../../components/Helmet/Meta'\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\n\nconst ProductListScreen = () => {\n    return (\n        <div style={{ marginTop: \"110px\" }}>\n            <Meta\n                title=\"FarmConnect | Admin Products\"\n            />\n            <Container fluid>\n                <Row>\n                    <Col md={3}>\n                        <h4>FarmConnect Products</h4>\n                    </Col>\n                    <Col md={9}>\n                        <h4 style={{ marginLeft: \"30px\" }}>Product List</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={3}>\n                        <SideBarComponents />\n                    </Col>\n                    <Col md={9}>\n                        <ProductListHome />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default ProductListScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {\n    Form,\n    Button,\n    Container,\n    Row,\n    Col\n} from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../components/Message/Message'\nimport Loader from './../../../components/Loader/Loader'\nimport FormContainer from './../../../components/FormContainer/FormContainer'\nimport { listSeedProductsDetails, updateSeedProducts } from './../../../actions/productSeedActions'\nimport { SEED_UPDATE_RESET } from '../../../constants/productConstants'\nimport Meta from '../../../components/Helmet/Meta'\n\nconst SeedListEdit = ({ match }) => {\n\n    const [name, setName] = useState('')\n    const [image, setImage] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [uploading, setUploading] = useState(false)\n\n    const productId = match.params.id\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const prodcutSeedDetails = useSelector(state => state.prodcutSeedDetails)\n    const { loading, productSeed, error } = prodcutSeedDetails\n\n    const seedUpdate = useSelector(state => state.seedUpdate)\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = seedUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: SEED_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!productSeed.name || productSeed._id !== productId) {\n                dispatch(listSeedProductsDetails(productId))\n            } else {\n                setName(productSeed.name)\n                setDescription(productSeed.description)\n                setPrice(productSeed.price)\n                setCategory(productSeed.category)\n                setImage(productSeed.image)\n                setCountInStock(productSeed.countInStock)\n            }\n        }\n    }, [history, productSeed, dispatch, productId, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateSeedProducts({\n            _id: productId,\n            name,\n            image,\n            description,\n            category,\n            price,\n            countInStock\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            console.error(error)\n            setUploading(false)\n        }\n    }\n\n    return (\n        <Container style={{ marginBottom: '50px' }}>\n            <Meta\n                title=\"FarmConnect | Admin Seed Edit\"\n            />\n            <FormContainer>\n                <h2 style={{ marginTop: '120px', textAlign: 'center' }}>Seed Profile</h2>\n                <Link to='/admin/productlist' className='btn btn-light my-3'>\n                    GO BACK\n                </Link>\n                {loading && <Loader />}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {successUpdate && <Message variant='success'>Profile Updated!</Message>}\n                <Form onSubmit={submitHandler}>\n                    <Row>\n                        <Col md={6}>\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n                                    type=\"name\"\n                                    placeholder=\"Enter name\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter image url\"\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                ></Form.Control>\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                ></Form.File>\n                                {uploading && <Loader />}\n                            </Form.Group>\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n                                    as=\"textarea\"\n                                    rows={3}\n                                    type=\"description\"\n                                    placeholder=\"Enter description\"\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group controlId='category'>\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n                                    type=\"category\"\n                                    placeholder=\"Enter price\"\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n                                    type=\"price\"\n                                    placeholder=\"Enter price\"\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='countInStock'>\n                                <Form.Label>Count in stock</Form.Label>\n                                <Form.Control\n                                    type=\"countInStock\"\n                                    placeholder=\"Enter count in stock\"\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </FormContainer>\n        </Container>\n    )\n}\n\nexport default SeedListEdit \n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {\n    Form,\n    Button,\n    Container,\n    Row,\n    Col\n} from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../components/Message/Message'\nimport Loader from './../../../components/Loader/Loader'\nimport FormContainer from './../../../components/FormContainer/FormContainer'\nimport { listLendMachineProductsDetails, updateLendMachine } from './../../../actions/productLendMachinesActions'\nimport { MACHINE_UPDATE_RESET } from '../../../constants/productConstants'\nimport Meta from '../../../components/Helmet/Meta'\n\nconst SeedListEdit = ({ match }) => {\n\n    const [name, setName] = useState('')\n    const [image, setImage] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [target_plant, setTarget_plant] = useState('')\n    const [quantity, setQuantity] = useState('')\n    const [machine_power, setMachine_power] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const productId = match.params.id\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const productLendMachinesDetails = useSelector(state => state.productLendMachinesDetails)\n    const { loading, productLendMachines, error } = productLendMachinesDetails\n\n    const LendMachinesUpdate = useSelector(state => state.LendMachinesUpdate)\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = LendMachinesUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: MACHINE_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!productLendMachines.name || productLendMachines._id !== productId) {\n                dispatch(listLendMachineProductsDetails(productId))\n            } else {\n                setName(productLendMachines.name)\n                setDescription(productLendMachines.description)\n                setPrice(productLendMachines.price)\n                setImage(productLendMachines.image)\n                setTarget_plant(productLendMachines.target_plant)\n                setQuantity(productLendMachines.quantity)\n                setMachine_power(productLendMachines.machine_power)\n            }\n        }\n    }, [history, productLendMachines, dispatch, productId, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateLendMachine({\n            _id: productId,\n            name,\n            image,\n            price,\n            description,\n            target_plant,\n            quantity,\n            machine_power\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            console.error(error)\n            setUploading(false)\n        }\n    }\n\n    return (\n        <Container style={{ marginBottom: '50px' }}>\n            <Meta\n                title=\"FarmConnect | Admin Machine Edit\"\n            />\n            <FormContainer>\n                <h2 style={{ marginTop: '120px', textAlign: 'center' }}>Lend Machine Profile</h2>\n                <Link to='/admin/productlist' className='btn btn-light my-3'>\n                    GO BACK\n                </Link>\n                {loading && <Loader />}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {successUpdate && <Message variant='success'>Profile Updated!</Message>}\n                <Form onSubmit={submitHandler}>\n                    <Row>\n                        <Col md={6}>\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n                                    type=\"name\"\n                                    placeholder=\"Enter name\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter image url\"\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                ></Form.Control>\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                ></Form.File>\n                                {uploading && <Loader />}\n                            </Form.Group>\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n                                    type=\"price\"\n                                    placeholder=\"Enter price\"\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n                                    as=\"textarea\"\n                                    rows={3}\n                                    type=\"description\"\n                                    placeholder=\"Enter description\"\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group controlId='countInStock'>\n                                <Form.Label>Target Plant</Form.Label>\n                                <Form.Control\n                                    type=\"countInStock\"\n                                    placeholder=\"Enter target plant\"\n                                    value={target_plant}\n                                    onChange={(e) => setTarget_plant(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='quantity'>\n                                <Form.Label>Quantity</Form.Label>\n                                <Form.Control\n                                    type=\"countInStock\"\n                                    placeholder=\"Enter qunatity\"\n                                    value={quantity}\n                                    onChange={(e) => setQuantity(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='machinepower'>\n                                <Form.Label>Machine Power</Form.Label>\n                                <Form.Control\n                                    type=\"machinepower\"\n                                    placeholder=\"Enter machine power\"\n                                    value={machine_power}\n                                    onChange={(e) => setMachine_power(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </FormContainer>\n        </Container>\n    )\n}\n\nexport default SeedListEdit \n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {\n    Form,\n    Button,\n    Container,\n    Row,\n    Col\n} from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../components/Message/Message'\nimport Loader from './../../../components/Loader/Loader'\nimport FormContainer from './../../../components/FormContainer/FormContainer'\nimport { listConsumerProductsDetails, updateConsumer } from './../../../actions/consumerProductAction'\nimport { CONSUMER_UPDATE_RESET } from '../../../constants/productConstants'\nimport Meta from '../../../components/Helmet/Meta'\n\nconst ConsumerListEdit = ({ match }) => {\n\n    const [prodName, setProdName] = useState('')\n    const [image, setImage] = useState('')\n    const [sellerName, setSellerName] = useState('')\n    const [price, setPrice] = useState('')\n    const [prodSize, setProdSize] = useState('')\n    const [quantity, setQuantity] = useState('')\n    const [avalaibleLoc, setAvalaibleLoc] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const productId = match.params.id\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const consumerProductDetails = useSelector(state => state.consumerProductDetails)\n    const { loading, consumerProduct, error } = consumerProductDetails\n\n    const consumerUpdate = useSelector(state => state.consumerUpdate)\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = consumerUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: CONSUMER_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!consumerProduct.prod_name || consumerProduct._id !== productId) {\n                dispatch(listConsumerProductsDetails(productId))\n            } else {\n                setProdName(consumerProduct.prod_name)\n                setSellerName(consumerProduct.seller_name)\n                setPrice(consumerProduct.price)\n                setImage(consumerProduct.image)\n                setProdSize(consumerProduct.prod_size)\n                setQuantity(consumerProduct.quantity)\n                setAvalaibleLoc(consumerProduct.avalaible_location)\n            }\n        }\n    }, [history, consumerProduct, dispatch, productId, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateConsumer({\n            _id: productId,\n            prod_name: prodName,\n            image: image,\n            price: price,\n            seller_name: sellerName,\n            prod_size: prodSize,\n            quantity: quantity,\n            avalaible_location: avalaibleLoc\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            console.error(error)\n            setUploading(false)\n        }\n    }\n\n    return (\n        <Container style={{ marginBottom: '50px' }}>\n            <Meta\n                title=\"FarmConnect | Admin Consumer Edit\"\n            />\n            <FormContainer>\n                <h2 style={{ marginTop: '120px', textAlign: 'center' }}>Consumer Profile</h2>\n                <Link to='/admin/productlist' className='btn btn-light my-3'>\n                    GO BACK\n                </Link>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading && <Loader />}\n                {error && <Message variant='danger'>{error}</Message>}\n                {successUpdate && <Message variant='success'>Profile Updated!</Message>}\n                <Form onSubmit={submitHandler}>\n                    <Row>\n                        <Col md={6}>\n                            <Form.Group controlId='prodname'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n                                    type=\"prodName\"\n                                    placeholder=\"Enter Product Name\"\n                                    value={prodName}\n                                    onChange={(e) => setProdName(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter image url\"\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                ></Form.Control>\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                ></Form.File>\n                                {uploading && <Loader />}\n                            </Form.Group>\n                            <Form.Group controlId='sellerName'>\n                                <Form.Label>Seller Name</Form.Label>\n                                <Form.Control\n                                    type=\"sellerName\"\n                                    placeholder=\"Enter seller name\"\n                                    value={sellerName}\n                                    onChange={(e) => setSellerName(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n                                    type=\"price\"\n                                    placeholder=\"Enter price\"\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group controlId='prodSize'>\n                                <Form.Label>Product Size</Form.Label>\n                                <Form.Control\n                                    type=\"prodSize\"\n                                    placeholder=\"Enter product size\"\n                                    value={prodSize}\n                                    onChange={(e) => setProdSize(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='quantity'>\n                                <Form.Label>Quantity</Form.Label>\n                                <Form.Control\n                                    type=\"countInStock\"\n                                    placeholder=\"Enter qunatity\"\n                                    value={quantity}\n                                    onChange={(e) => setQuantity(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='avalaibleLoc'>\n                                <Form.Label>Machine Power</Form.Label>\n                                <Form.Control\n                                    type=\"avalaibleLoc\"\n                                    placeholder=\"Enter avalaible location\"\n                                    value={avalaibleLoc}\n                                    onChange={(e) => setAvalaibleLoc(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </FormContainer>\n        </Container>\n    )\n}\n\nexport default ConsumerListEdit \n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {\n    Form,\n    Button,\n    Container,\n    Row,\n    Col\n} from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../Message/Message'\nimport Loader from './../Loader/Loader'\nimport FormContainer from './../FormContainer/FormContainer'\nimport { updateSupplierProduct, getroductsDetails } from './../../actions/supplierProduct'\nimport { SUPPLIER_PRODUCT_UPDATE_RESET } from './../../constants/supplierConstant'\nimport Meta from '../Helmet/Meta'\n\nconst SupplierProductEdit = ({ match }) => {\n\n    const [name, setName] = useState('')\n    const [image, setImage] = useState('')\n    const [description, setDescription] = useState('')\n    const [email, setEmail] = useState('')\n    const [address, setAddress] = useState('')\n    const [cropSelection, setCropSelection] = useState('')\n    const [storage, setStorage] = useState('')\n    const [phonenumber, setPhonenumber] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const productId = match.params.id\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const FarmerProductDetails = useSelector(state => state.FarmerProductDetails)\n    const { loading, product, error } = FarmerProductDetails\n\n    const farmerProductUpdate = useSelector(state => state.farmerProductUpdate)\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = farmerProductUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: SUPPLIER_PRODUCT_UPDATE_RESET })\n            history.push('/profile')\n        } else {\n            if (!product.name || product._id !== productId) {\n                dispatch(getroductsDetails(productId))\n            } else {\n                setName(product.name)\n                setDescription(product.description)\n                setEmail(product.email)\n                setAddress(product.address)\n                setImage(product.image)\n                setCropSelection(product.cropSelection)\n                setStorage(product.storage)\n                setPhonenumber(product.phonenumber)\n            }\n        }\n    }, [history, product, dispatch, productId, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateSupplierProduct({\n            _id: productId,\n            name,\n            email,\n            address,\n            cropSelection,\n            storage,\n            image,\n            phonenumber,\n            description\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            console.error(error)\n            setUploading(false)\n        }\n    }\n\n    return (\n        <Container style={{ marginBottom: '50px' }}>\n            <Meta\n                title=\"FarmConnect | Supplier Edit\"\n            />\n            <FormContainer>\n                <h2 style={{ marginTop: '100px', textAlign: 'center' }}>Product Profile</h2>\n                <Link to='/profile' className='btn btn-light my-3'>\n                    GO BACK\n                </Link>\n                {loading && <Loader />}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {successUpdate && <Message variant='success'>Profile Updated!</Message>}\n                <Form onSubmit={submitHandler}>\n                    <Row>\n                        <Col md={6}>\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    type=\"name\"\n                                    placeholder=\"Enter name\"\n                                    value={name}\n                                    required\n                                    onChange={(e) => setName(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address<span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    type=\"nic\"\n                                    placeholder=\"Enter email\"\n                                    value={email}\n                                    required\n                                    onChange={(e) => setEmail(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='address'>\n                                <Form.Label>Address <span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    type=\"address\"\n                                    as=\"textarea\" rows={1}\n                                    placeholder=\"Enter address\"\n                                    value={address}\n                                    required\n                                    onChange={(e) => setAddress(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='cropSelection'>\n                                <Form.Label>Product Type <span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    type=\"cropSelection\"\n                                    placeholder=\"Enter crop or Animal or others\"\n                                    value={cropSelection}\n                                    required\n                                    onChange={(e) => setCropSelection(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='storage'>\n                                <Form.Label>Product Size <span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    type=\"storage\"\n                                    placeholder=\"Enter size (kg)\"\n                                    value={storage}\n                                    required\n                                    onChange={(e) => setStorage(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image <span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter image url\"\n                                    value={image}\n                                    required\n                                    onChange={(e) => setImage(e.target.value)}\n                                ></Form.Control>\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                ></Form.File>\n                                {uploading && <Loader />}\n                            </Form.Group>\n                            <Form.Group controlId='phonenumber'>\n                                <Form.Label>Phone Number <span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    type=\"phonenumber\"\n                                    placeholder=\"Enter phonenumber\"\n                                    value={phonenumber}\n                                    required\n                                    onChange={(e) => setPhonenumber(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description <span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    as=\"textarea\" rows={3}\n                                    type=\"description\"\n                                    placeholder=\"Enter description\"\n                                    value={description}\n                                    required\n                                    onChange={(e) => setDescription(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <br />\n                            <Button type=\"submit\" variant=\"primary\">Submit</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </FormContainer>\n        </Container>\n    )\n}\n\nexport default SupplierProductEdit \n","import React, { useEffect } from 'react'\nimport {\n    Table,\n    Container,\n    Button\n} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../components/Message/Message'\nimport Loader from './../../../components/Loader/Loader'\nimport { listOrders } from './../../../actions/orderAction'\n\nconst OrderListScreen = ({ history }) => {\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <div style={{ marginTop: '10px' }}>\n            <Container>\n                {loading ? <Loader />\n                    : error ? <Message variant='danger'>{error}</Message>\n                        : (\n                            <Table style={{ marginBottom: '223px' }} striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <td>ID</td>\n                                        <td>USER</td>\n                                        <td>DATE</td>\n                                        <td>TOTAL PRICE</td>\n                                        <td>PAID</td>\n                                        <td>DELIVERED</td>\n                                        <td>MORE</td>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        orders.map(order => (\n                                            <tr key={order._id}>\n                                                <td>{order._id}</td>\n                                                <td>{order.user && order.user.name}</td>\n                                                <td>{order.createdAt.substring(0, 10)}</td>\n                                                <td>{order.totalPrice}</td>\n                                                <td>\n                                                    {order.isPaid ? (\n                                                        order.paidAt.substring(0, 10)\n                                                    ) : (\n                                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                                        )\n                                                    }\n                                                </td>\n                                                <td>\n                                                    {order.isDelivered ? (\n                                                        order.paidAt.substring(0, 10)\n                                                    ) : (\n                                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                                        )}\n                                                </td>\n                                                <td>\n                                                    <LinkContainer to={`/order/${order._id}/edit`}>\n                                                        <Button varinat='light' className='btn-sm'>\n                                                            Details\n                                                        </Button>\n                                                    </LinkContainer>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </Table>\n                        )\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default OrderListScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport OrderList from '../../components/DashBoard/OrderList/OrderList'\nimport Meta from '../../components/Helmet/Meta'\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\n\nconst OrderListScreen = () => {\n    return (\n        <div style={{ marginTop: \"110px\" }}>\n            <Meta\n                title=\"FarmConnect | Admin Orders\"\n            />\n            <Container fluid>\n                <Row>\n                    <Col md={3}>\n                        <h4>FarmConnect Orders</h4>\n                    </Col>\n                    <Col md={9}>\n                        <h4 style={{ marginLeft: \"30px\" }}>All Orders</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={3}>\n                        <SideBarComponents />\n                    </Col>\n                    <Col md={9}>\n                        <OrderList />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default OrderListScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {\n    Table,\n    Button,\n    Container,\n    Image\n} from 'react-bootstrap'\nimport { Scrollbar } from \"react-scrollbars-custom\";\nimport { useHistory } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../components/Message/Message'\nimport Loader from './../../../components/Loader/Loader'\nimport { listSupplierProducts } from './../../../actions/supplierProduct'\n\nconst Harvest = () => {\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const supplierProductList = useSelector(state => state.supplierProductList)\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProductList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (!userInfo.isAdmin && !userInfo) {\n            history.push('/login')\n        } else {\n            dispatch(listSupplierProducts())\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <Container fluid>\n            <Scrollbar style={{ width: '100%', height: 450 }}>\n                {loadingProducts ? <Loader />\n                    : errorProducts ? <Message variant='danger'>{errorProducts}</Message>\n                        : (\n                            <Table style={{ marginBottom: '50px', marginTop: \"5px\" }} striped bordered hover responsive className='table-sm'>\n                                <thead style={{ fontWeight: \"bold\" }}>\n                                    <tr>\n                                        <td>NAME</td>\n                                        <td>ADDRESS</td>\n                                        <td>IMAGE</td>\n                                        <td>DESCRPTION</td>\n                                        <td>CONTACT</td>\n                                        <td>CROP</td>\n                                        <td>MORE</td>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        products.map(product => (\n                                            <tr key={product._id}>\n                                                <td>{product.name}</td>\n                                                <td>{product.address}</td>\n                                                <td>\n                                                    <Image src={product.image} rounded width=\"60px\" />\n                                                </td>\n                                                <td>{product.description}</td>\n                                                {\n                                                    product.phonenumber\n                                                        ? <td>\n                                                            <a rel=\"noreferrer\" target='_blank' href={`https://wa.me/${product.phonenumber}`}>{product.phonenumber}</a>\n                                                        </td>\n                                                        : <td>Null</td>\n                                                }\n                                                <td>{product.cropSelection}</td>\n                                                <td>\n                                                    {\n                                                        product.isReviwed ? (\n                                                            <LinkContainer to={`/supplierproducts/${product._id}/review`}>\n                                                                <Button\n                                                                    disabled\n                                                                    variant=\"danger\"\n                                                                    className=\"btn-sm mr-2\">Reviewed\n                                                                    </Button>\n                                                            </LinkContainer>\n                                                        ) : (\n                                                                <LinkContainer to={`/supplierproducts/${product._id}/review`}>\n                                                                    <Button\n                                                                        variant=\"primary\"\n                                                                        className=\"btn-sm mr-2\">\n                                                                        <i className=\"fas fa-eye\"></i> Review\n                                                                    </Button>\n                                                                </LinkContainer>\n                                                            )\n                                                    }\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </Table>\n                        )\n                }\n            </Scrollbar>\n        </Container>\n    )\n}\n\nexport default Harvest\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Harvest from '../../components/DashBoard/Harvest/Harvest'\nimport Meta from '../../components/Helmet/Meta'\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\n\nconst HarvestScreen = () => {\n    return (\n        <div style={{ marginTop: \"110px\" }}>\n            <Meta\n                title=\"FarmConnect | Admin Harvest\"\n            />\n            <Container fluid>\n                <Row>\n                    <Col md={3}>\n                        <h4>Harvest</h4>\n                    </Col>\n                    <Col md={9}>\n                        <h4 style={{ marginLeft: \"30px\" }}>Farmers Products</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={3}>\n                        <SideBarComponents />\n                    </Col>\n                    <Col md={9}>\n                        <Harvest />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default HarvestScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport {\n    Col,\n    Container,\n    Row,\n    Image,\n    ListGroup,\n    Card,\n    Button,\n    Form\n} from 'react-bootstrap';\nimport { getroductsDetails, createProductReview } from './../../actions/supplierProduct'\nimport Loader from '../../components/Loader/Loader';\nimport Message from '../../components/Message/Message';\nimport Meta from '../../components/Helmet/Meta';\n\nconst FarmerProduct = ({ history, match }) => {\n\n    const userId = match.params.id\n\n    const dispatch = useDispatch()\n\n    const FarmerProductDetails = useSelector(state => state.FarmerProductDetails)\n    const { loading, error, product } = FarmerProductDetails\n\n    const farmerReviewCreate = useSelector(state => state.farmerReviewCreate)\n    const { loading: loadingReview, error: loadingError, success: successReview } = farmerReviewCreate\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    useEffect(() => {\n\n        if (successReview) {\n\n            // history.push('/admin/dashboard')\n        } else {\n            if (!product.name || product._id !== userId) {\n                dispatch(getroductsDetails(userId))\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch, match, successReview, history, userId])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(match.params.id, {\n            rating,\n            comment,\n        }))\n    }\n\n    return (\n        <div className=\"productScreen\">\n            <Meta\n                title=\"FarmConnect | Admin Farmer Review\"\n            />\n            <Container>\n                <Link className=\"btn btn-go-back btn-dark\" to=\"/admin/supplierproducts\">GO BACK</Link>\n                {\n                    loading\n                        ? <Loader />\n                        : error\n                            ? <Message variant='danger'>{error}</Message>\n                            : (\n                                <Row className=\"p-1 seed-product\" >\n                                    <Col md={5}>\n                                        <Image className=\"mx-auto image-machine\" src={product.image} alt={product.name} width={200} />\n                                    </Col>\n                                    <Col md={4}>\n                                        <ListGroup className=\"borderless\" variant='flush'>\n                                            <ListGroup.Item>\n                                                <h4>Name </h4>{product.name}\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <h4>Address </h4> {product.address}\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <h4>Product Description<br /></h4> {product.description}\n                                            </ListGroup.Item>\n                                            {\n                                                product.phonenumber ? (\n                                                    <ListGroup.Item>\n                                                        <h4> Contact Number<br /></h4>\n                                                        <a rel=\"noreferrer\" target='_blank' href={`https://wa.me/${product.phonenumber}`}>\n                                                            {product.phonenumber}\n                                                        </a>\n                                                    </ListGroup.Item>\n                                                ) : ''\n                                            }\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <h4>Crop </h4>{product.cropSelection}\n                                                    </Col>\n                                                    {\n                                                        product.storage ? (\n                                                            <Col md={6}>\n                                                                <h4>Quantity </h4>{product.storage} kg\n                                                            </Col>\n                                                        ) : ''\n                                                    }\n                                                </Row>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Col>\n                                    <Col md={3}>\n                                        <Card>\n                                            <ListGroup>\n                                                <ListGroup.Item>\n                                                    <p>Write a Farmer Review</p>\n                                                    {successReview && (\n                                                        <Message variant='success'>\n                                                            Review submitted successfully\n                                                        </Message>\n                                                    )}\n                                                    {loadingReview && <Loader />}\n                                                    {loadingError && (\n                                                        <Message variant='danger'>{loadingError}</Message>\n                                                    )}\n                                                    {userInfo && userInfo.isAdmin ? (\n                                                        <Form onSubmit={submitHandler}>\n                                                            <Form.Group controlId='rating'>\n                                                                <Form.Label>Rating</Form.Label>\n                                                                <Form.Control\n                                                                    as='select'\n                                                                    value={rating}\n                                                                    onChange={(e) => setRating(e.target.value)}\n                                                                >\n                                                                    <option value=''>Select...</option>\n                                                                    <option value='1'>1 - Poor</option>\n                                                                    <option value='2'>2 - Fair</option>\n                                                                    <option value='3'>3 - Good</option>\n                                                                    <option value='4'>4 - Very Good</option>\n                                                                    <option value='5'>5 - Excellent</option>\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                            <Form.Group controlId='comment'>\n                                                                <Form.Label>Feedback</Form.Label>\n                                                                <Form.Control\n                                                                    as='textarea'\n                                                                    row='3'\n                                                                    value={comment}\n                                                                    onChange={(e) => setComment(e.target.value)}\n                                                                ></Form.Control>\n                                                            </Form.Group>\n                                                            <Button\n                                                                disabled={loadingReview}\n                                                                type='submit'\n                                                                variant='primary'\n                                                            >Submit</Button>\n                                                        </Form>\n                                                    ) : (\n                                                            <Message>\n                                                                Please <Link to='/login'>sign in</Link> to write a review{' '}\n                                                            </Message>\n                                                        )}\n                                                </ListGroup.Item>\n                                            </ListGroup>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            )\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default FarmerProduct\n","const MapStyles = [\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#e9e9e9\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 29\n            },\n            {\n                \"weight\": 0.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 18\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#dedede\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": 36\n            },\n            {\n                \"color\": \"#333333\"\n            },\n            {\n                \"lightness\": 40\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            },\n            {\n                \"lightness\": 19\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#fefefe\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#fefefe\"\n            },\n            {\n                \"lightness\": 17\n            },\n            {\n                \"weight\": 1.2\n            }\n        ]\n    }\n]\n\nexport default MapStyles","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Rating.css'\n\nconst Rating = ({ value, text, color }) => {\n    return (\n        <div className=\"rating\">\n            <span className=\"text-span\">{text && text}: </span>\n            <span>\n                <i style={{ color }} className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{ color }} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{ color }} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{ color }} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n            <span>\n                <i style={{ color }} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }\n                ></i>\n            </span>\n\n        </div>\n    )\n}\n\nRating.propTypes = {\n    value: PropTypes.number,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n}\n\nRating.defaultProps = {\n    color: '#47cf38'\n}\n\nexport default Rating\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Image } from 'react-bootstrap'\nimport {\n    GoogleMap,\n    withScriptjs,\n    withGoogleMap,\n    Marker,\n    InfoWindow\n} from 'react-google-maps'\nimport Message from '../../Message/Message'\nimport Loader from '../../Loader/Loader'\nimport { listSupplierProducts } from '../../../actions/supplierProduct'\nimport MapStyles from './MapStyles'\nimport Rating from './Rating/Rating'\n\nconst Map = () => {\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const [selectedPlace, setSelectedPlace] = useState(null)\n\n    const supplierProductList = useSelector(state => state.supplierProductList)\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProductList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (!userInfo.isAdmin && !userInfo) {\n            history.push('/login')\n        } else {\n            dispatch(listSupplierProducts())\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <GoogleMap\n            defaultCenter={{ lat: 6.927079, lng: 79.861244 }}\n            defaultZoom={10}\n            defaultOptions={{ styles: MapStyles }}\n        >\n            {\n                loadingProducts ? <Loader />\n                    : errorProducts\n                        ? <Message variant='danger'>{errorProducts}</Message>\n                        : (\n                            products.map(place => (\n                                <Marker\n                                    key={place._id}\n                                    position={{\n                                        lat: place.latitude,\n                                        lng: place.longitude\n                                    }}\n                                    onClick={() => {\n                                        setSelectedPlace(place)\n                                    }}\n                                    icon={{\n                                        url: '/mapIcon.svg',\n                                        scaledSize: new window.google.maps.Size(25, 25)\n                                    }}\n                                />\n                            ))\n                        )\n\n            }\n            {\n                selectedPlace && (\n                    <InfoWindow\n                        position={{\n                            lat: selectedPlace.latitude,\n                            lng: selectedPlace.longitude\n                        }}\n                        onCloseClick={() => {\n                            setSelectedPlace(null)\n                        }}\n                    >\n                        <div>\n                            <Image className=\"mx-auto d-block img-fluid mb-1\" rounded width=\"120px\" src={selectedPlace.image} alt={selectedPlace.name} />\n                            <h4 style={{ textAlign: \"center\" }}>{selectedPlace.cropSelection}</h4>\n                            <p>\n                                Farmer: <span style={{ fontWeight: \"bold\" }}>{selectedPlace.name}</span><br />\n                                Description: {selectedPlace.description}<br />\n                                Address: {selectedPlace.address}<br />\n                                Reviewed: {\n                                    selectedPlace.isReviwed\n                                        ? (<>\n                                            <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                                            <p><Rating text=\"Rating\" value={selectedPlace.rating} /></p>\n                                        </>\n                                        )\n                                        : (<i className=\"fas fa-times\" style={{ color: \"red\" }} />)\n                                }\n                            </p>\n                        </div>\n                    </InfoWindow>\n                )\n            }\n        </GoogleMap>\n\n    )\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\n\nexport default WrappedMap\n","import React from 'react'\nimport WrappedMap from './Map'\nimport { Scrollbar } from \"react-scrollbars-custom\";\n\nconst OverLay = () => {\n    return (\n        <Scrollbar style={{ width: '100%', height: 480 }}>\n            <div style={{ width: '100%', height: '100vh' }}>\n                <WrappedMap\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n                    loadingElement={<div style={{ height: '100%' }} />}\n                    containerElement={<div style={{ height: '400px' }} />}\n                    mapElement={<div style={{ height: '100vh' }} />}\n                />\n            </div>\n        </Scrollbar>\n    )\n}\n\nexport default OverLay\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport OverLay from '../../components/DashBoard/Map/OverLay'\nimport Meta from '../../components/Helmet/Meta'\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\n\nconst MapScreen = () => {\n    return (\n        <div style={{ marginTop: \"110px\" }}>\n            <Meta\n                title=\"FarmConnect | Admin Map\"\n            />\n            <Container fluid>\n                <Row>\n                    <Col md={3}>\n                        <h4>Map</h4>\n                    </Col>\n                    <Col md={9}>\n                        <h4 style={{ marginLeft: \"30px\" }}>Farmers Harvest Map</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={3}>\n                        <SideBarComponents />\n                    </Col>\n                    <Col md={9}>\n                        <OverLay />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default MapScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport LoginComponent from './components/Login/LoginComponent';\nimport Register from './components/Register/Register';\nimport PlaceOrder from './components/PlaceOrder/PlaceOrder.jsx'\n\nimport HomeScreen from './screens/Home/HomeScreen';\nimport Consumer from './screens/Consumer/ConsumerScreen';\nimport Farmer from './screens/Farmer/FarmerScreen';\nimport Supplier from './screens/Supplier/SupplierScreen';\nimport ProfileScreen from './screens/Profile/ProfileScreen';\nimport DashboardScreen from './screens/Dashboard/DashboardScreen';\nimport AdminProfileScreen from './screens/Dashboard/ProfileScreen';\nimport Farmer_ProductSeed from './screens/Farmer_ProductSeed/Farmer_ProductSeedScreen';\nimport SeedProductScreen from './screens/Product_Seed/SeedProductScreen';\nimport Farmer_LendScreen from './screens/Farmer_LendMachine/Farmer_LendScreen';\nimport LendMachineProduct from './screens/Product_LendMachine/LendMachineProduct';\nimport PaymentMethodScreen from './screens/Payment/PaymentMethodScreen'\nimport ConsumerProductDetailScreen from './screens/Product_Consumer/ConsumerProductDetailScreen'\nimport ShippingScreen from './screens/Shipping/ShippingScreen';\nimport OrderScreen from './screens/Order/OrderScreen';\nimport Cart from './screens/Cart/Cart';\nimport UserListScreen from './screens/Dashboard/UserListScreen';\nimport UserEditScreen from './screens/UserEdit/UserEditScreen';\nimport ProductListScreen from './screens/Dashboard/ProductListScreen'\nimport SeedListEdit from './screens/ProductListEdit/SeedListEdit/SeedListEdit'\nimport MachineListEdit from './screens/ProductListEdit/MachineListEdit/MachineListEdit'\nimport ConsumerListEdit from './screens/ProductListEdit/ConsumerListEdit/ConsumerListEdit'\nimport SupplierProductEdit from './components/SupplierProductEdit/SupplierProductEdit'\nimport OrderListScreen from './screens/Dashboard/OrderListScreen'\nimport HarvestScreen from './screens/Dashboard/HarvestScreen';\nimport FarmerProduct from './screens/FarmerProducts/FarmerProducts';\nimport MapScreen from './screens/Dashboard/MapScreen';\n\nconst Layout = () => {\n    return (\n        <>\n            <Router>\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={HomeScreen} />\n                    <Route exact path=\"/farmer\" component={Farmer} />\n                    <Route exact path=\"/consumer\" component={Consumer} />\n                    <Route exact path=\"/supplier\" component={Supplier} />\n                    <Route exact path=\"/farmers/sellMeterial\" component={LoginComponent} />\n                    <Route exact path=\"/login\" component={LoginComponent} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/profile\" component={ProfileScreen} />\n                    <Route exact path=\"/shipping\" component={ShippingScreen} />\n                    <Route exact path=\"/payment\" component={PaymentMethodScreen} />\n                    <Route exact path=\"/placeorder\" component={PlaceOrder} />\n                    <Route exact path=\"/cart/:id?\" component={Cart} />\n                    <Route path=\"/order/:id\" component={OrderScreen} />\n\n                    <Route exact path=\"/admin/userList\" component={UserListScreen} />\n                    <Route exact path=\"/admin/dashboard\" component={DashboardScreen} />\n                    <Route exact path=\"/admin/profile\" component={AdminProfileScreen} />\n                    <Route exact path=\"/admin/productlist\" component={ProductListScreen} />\n                    <Route exact path=\"/admin/orderlist\" component={OrderListScreen} />\n                    <Route exact path=\"/admin/supplierproducts\" component={HarvestScreen} />\n                    <Route exact path=\"/admin/map\" component={MapScreen} />\n                    <Route exact path=\"/admin/productlist/seed/:id/edit\" component={SeedListEdit} />\n                    <Route exact path=\"/admin/productlist/machine/:id/edit\" component={MachineListEdit} />\n                    <Route exact path=\"/admin/productlist/consumer/:id/edit\" component={ConsumerListEdit} />\n                    <Route exact path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n                    <Route exact path=\"/supplierproducts/:id/review\" component={FarmerProduct} />\n                    <Route exact path=\"/supplierproducts/:id/edit\" component={SupplierProductEdit} />\n\n                    <Route exact path=\"/farmers/purchaseSeeds\" component={Farmer_ProductSeed} />\n                    <Route exact path=\"/farmers/purchaseSeeds/:id\" component={SeedProductScreen} />\n                    <Route exact path=\"/farmers/lendMachines\" component={Farmer_LendScreen} />\n                    <Route exact path=\"/farmers/lendMachines/:id\" component={LendMachineProduct} />\n                    <Route exact path=\"/consumer/:id\" component={ConsumerProductDetailScreen} />\n                </Switch>\n                <Footer />\n            </Router>\n        </>\n    )\n}\n\nexport default Layout\n","import React from 'react';\nimport Layout from './Layout';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n        <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport dotenv from 'dotenv';\nimport { Provider } from 'react-redux'\n\nimport store from './store';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\ndotenv.config('./../.env');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}